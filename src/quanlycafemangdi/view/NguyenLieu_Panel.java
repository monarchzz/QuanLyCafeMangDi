/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlycafemangdi.view;

import java.awt.Color;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JLayeredPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel; 
import quanlycafemangdi.Util;
import java.sql.*;
import java.util.Comparator;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import quanlycafemangdi.model.ChiTietNhapXuat;

/**
 *
 * @author admin
 */
// Phuong thuc chung: dong 980 
// Phuong thuc cua Panel Nguyen Lieu: dong 1045
// Phuong thuc cua Panel Chi Tiet Nhap Xuat: dong 1235 
import quanlycafemangdi.model.NguyenLieu;
public class NguyenLieu_Panel extends javax.swing.JPanel implements IOnFrameDispose{

    private JLayeredPane jLayeredPane;
    private JPanel homePanel;
    
    private DefaultTableModel dtm;
    private DefaultTableModel dtmChiTietNhap;
    private DefaultTableModel dtmChiTietXuat;
    
    private ArrayList<NguyenLieu> danhSachNguyenLieu = new ArrayList<>();
    private ArrayList<ChiTietNhapXuat> danhSachNhap = new ArrayList<>();
    private ArrayList<ChiTietNhapXuat> danhSachXuat = new ArrayList<>();    
    
    // Du lieu cua combo box
    private ArrayList<String> danhSachSapXep_CBx = new ArrayList<>();
    private ArrayList<String> danhSachTimKiem_CBx = new ArrayList<>();
    private ArrayList<String> danhSachSapXepCTNX_CBx = new ArrayList<>();
    private ArrayList<String> danhSachTimKiemCTNX_CBx = new ArrayList<>();

    
    public NguyenLieu_Panel() {
        initComponents();
    }
    
    public NguyenLieu_Panel(JLayeredPane jLayeredPane, JPanel homePanel)
    {
        initComponents();        
        this.jLayeredPane = jLayeredPane;
        this.homePanel = homePanel;
        
        khoiTaoBang();
        khoiTaoDuLieuComboBox();
        khoiTaoDuLieuComboBoxCTNX();        
        
        hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "CSDL");
        hienThiDanhSachNhap(danhSachNhap, "CSDL");
        hienThiDanhSachXuat(danhSachXuat, "CSDL");
        hienThiTongSoLuongVaSoTienNhap(danhSachNhap);
        hienThiTongSoLuongVaSoTienXuat(danhSachXuat);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        refresh_Btn = new javax.swing.JButton();
        timKiem_TF = new javax.swing.JTextField();
        nhap_Btn = new javax.swing.JButton();
        goiYChinhSuaDuLieu_Lbl = new javax.swing.JLabel();
        timKiem_CBx = new javax.swing.JComboBox<>();
        sapXep_Lbl = new javax.swing.JLabel();
        timKiem_Btn = new javax.swing.JButton();
        quayLai_Btn = new javax.swing.JButton();
        sapXep_CBx = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        nguyenLieu_Table = new javax.swing.JTable();
        themNguyenLieu_Btn = new javax.swing.JButton();
        timKiem_Lbl = new javax.swing.JLabel();
        tangDan_Btn = new javax.swing.JButton();
        giamDan_Btn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        chiTietNhapXuat_Lbl = new javax.swing.JLabel();
        chiTietNhap_Lbl = new javax.swing.JLabel();
        chiTietXuat_Lbl = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        chiTietNhap_Table = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        chiTietXuat_Table = new javax.swing.JTable();
        quayLaiCTNX_Btn = new javax.swing.JButton();
        timKiemCTNX_Lbl = new javax.swing.JLabel();
        timKiemCTNX_CBx = new javax.swing.JComboBox<>();
        timKiemCTNX_TF = new javax.swing.JTextField();
        sapXepCTNX_Lbl = new javax.swing.JLabel();
        sapXepCTNX_CBx = new javax.swing.JComboBox<>();
        timKiemCTNX_Btn = new javax.swing.JButton();
        tangDanCTNX_Btn = new javax.swing.JButton();
        giamDanCTNX_Btn = new javax.swing.JButton();
        refreshCTNX_Btn = new javax.swing.JButton();
        tongSoLuongNhap_Lbl = new javax.swing.JLabel();
        tongSoTienNhap_Lbl = new javax.swing.JLabel();
        tongSoLuongXuat_Lbl = new javax.swing.JLabel();
        tongSoTienXuat_Lbl = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1000, 600));

        refresh_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/Refresh.png"))); // NOI18N
        refresh_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh_BtnActionPerformed(evt);
            }
        });

        timKiem_TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timKiem_TFActionPerformed(evt);
            }
        });
        timKiem_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                timKiem_TFKeyPressed(evt);
            }
        });

        nhap_Btn.setText("Nhập/Xuất");
        nhap_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nhap_BtnActionPerformed(evt);
            }
        });

        goiYChinhSuaDuLieu_Lbl.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        goiYChinhSuaDuLieu_Lbl.setText("*Double click để chỉnh sửa dữ liệu");

        timKiem_CBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timKiem_CBxActionPerformed(evt);
            }
        });

        sapXep_Lbl.setText("Sắp xếp theo: ");

        timKiem_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/search.png"))); // NOI18N
        timKiem_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timKiem_BtnActionPerformed(evt);
            }
        });

        quayLai_Btn.setText("Quay lại");
        quayLai_Btn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        quayLai_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quayLai_BtnActionPerformed(evt);
            }
        });

        sapXep_CBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sapXep_CBxActionPerformed(evt);
            }
        });

        nguyenLieu_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        nguyenLieu_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nguyenLieu_TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(nguyenLieu_Table);

        themNguyenLieu_Btn.setText("Thêm nguyên liệu mới");
        themNguyenLieu_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themNguyenLieu_BtnActionPerformed(evt);
            }
        });

        timKiem_Lbl.setText("Tìm kiếm theo");

        tangDan_Btn.setText("Tăng dần");
        tangDan_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tangDan_BtnActionPerformed(evt);
            }
        });

        giamDan_Btn.setText("Giảm dần");
        giamDan_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giamDan_BtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(refresh_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tangDan_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(giamDan_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(quayLai_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(timKiem_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(timKiem_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(timKiem_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(timKiem_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(128, 128, 128)
                                .addComponent(sapXep_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(sapXep_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(goiYChinhSuaDuLieu_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(345, 345, 345)
                .addComponent(nhap_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(themNguyenLieu_Btn)
                .addGap(0, 427, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(quayLai_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(timKiem_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(timKiem_Btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(timKiem_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(timKiem_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sapXep_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sapXep_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(giamDan_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tangDan_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(refresh_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(goiYChinhSuaDuLieu_Lbl)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nhap_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(themNguyenLieu_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Nguyên liệu", jPanel1);

        jPanel2.setPreferredSize(new java.awt.Dimension(1019, 493));

        chiTietNhapXuat_Lbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        chiTietNhapXuat_Lbl.setText("Chi tiết nhập xuất");

        chiTietNhap_Lbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chiTietNhap_Lbl.setText("Nhập");

        chiTietXuat_Lbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chiTietXuat_Lbl.setText("Xuất");

        chiTietNhap_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(chiTietNhap_Table);

        chiTietXuat_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(chiTietXuat_Table);

        quayLaiCTNX_Btn.setText("Quay lại");
        quayLaiCTNX_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quayLaiCTNX_BtnActionPerformed(evt);
            }
        });

        timKiemCTNX_Lbl.setText("Tìm kiếm theo");

        timKiemCTNX_CBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timKiemCTNX_CBxActionPerformed(evt);
            }
        });

        timKiemCTNX_TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timKiemCTNX_TFActionPerformed(evt);
            }
        });
        timKiemCTNX_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                timKiemCTNX_TFKeyPressed(evt);
            }
        });

        sapXepCTNX_Lbl.setText("Sắp xếp theo: ");

        sapXepCTNX_CBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sapXepCTNX_CBxActionPerformed(evt);
            }
        });

        timKiemCTNX_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/search.png"))); // NOI18N
        timKiemCTNX_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timKiemCTNX_BtnActionPerformed(evt);
            }
        });

        tangDanCTNX_Btn.setText("Tăng dần");
        tangDanCTNX_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tangDanCTNX_BtnActionPerformed(evt);
            }
        });

        giamDanCTNX_Btn.setText("Giảm dần");
        giamDanCTNX_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giamDanCTNX_BtnActionPerformed(evt);
            }
        });

        refreshCTNX_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/Refresh.png"))); // NOI18N
        refreshCTNX_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshCTNX_BtnActionPerformed(evt);
            }
        });

        tongSoLuongNhap_Lbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        tongSoTienNhap_Lbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        tongSoLuongXuat_Lbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        tongSoTienXuat_Lbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(chiTietNhapXuat_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(407, 407, 407))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(refreshCTNX_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(quayLaiCTNX_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(timKiemCTNX_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(timKiemCTNX_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(timKiemCTNX_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(timKiemCTNX_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(100, 100, 100)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(sapXepCTNX_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(sapXepCTNX_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(tangDanCTNX_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(giamDanCTNX_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(chiTietNhap_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chiTietXuat_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(190, 190, 190))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tongSoTienNhap_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tongSoLuongNhap_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tongSoTienXuat_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tongSoLuongXuat_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(107, 107, 107))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(chiTietNhapXuat_Lbl)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(timKiemCTNX_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(quayLaiCTNX_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(timKiemCTNX_Btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(timKiemCTNX_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timKiemCTNX_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sapXepCTNX_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sapXepCTNX_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(giamDanCTNX_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tangDanCTNX_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chiTietXuat_Lbl)
                    .addComponent(chiTietNhap_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshCTNX_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(tongSoLuongNhap_Lbl)
                        .addGap(18, 18, 18)
                        .addComponent(tongSoTienNhap_Lbl))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(tongSoLuongXuat_Lbl)
                        .addGap(18, 18, 18)
                        .addComponent(tongSoTienXuat_Lbl)))
                .addContainerGap(156, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Chi tiết nhập xuất", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void themNguyenLieu_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themNguyenLieu_BtnActionPerformed
        NguyenLieu_ThemFrame themNguyenLieuFrm = new NguyenLieu_ThemFrame();
        themNguyenLieuFrm.setOnFrameDispose(this);
        themNguyenLieuFrm.setDanhSachNguyenLieu(danhSachNguyenLieu);
        themNguyenLieuFrm.setVisible(true);
    }//GEN-LAST:event_themNguyenLieu_BtnActionPerformed

    private void quayLai_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quayLai_BtnActionPerformed
        Util.doiPanel(jLayeredPane, homePanel);
    }//GEN-LAST:event_quayLai_BtnActionPerformed

    private void timKiem_CBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timKiem_CBxActionPerformed
        int luaChonTimKiem = timKiem_CBx.getSelectedIndex();
        ArrayList<NguyenLieu> danhSachTam = new ArrayList<>();
        
        if (luaChonTimKiem == 2)
        {
            JTextField giaTienDau_TF = new JTextField();
            JTextField giaTienCuoi_TF = new JTextField();
            Object inputs[] = {
                "Từ:", giaTienDau_TF,
                "Đến:", giaTienCuoi_TF
            };
            Object options[] = {
                "Tìm kiếm",
                "Hủy"
            };
            int luaChon = JOptionPane.showOptionDialog(null, inputs, "Tìm kiếm nguyên liệu theo giá", 
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            if (luaChon == JOptionPane.OK_OPTION)
            {
                String giaTienDau = giaTienDau_TF.getText();
                String giaTienCuoi = giaTienCuoi_TF.getText();
                
                for (NguyenLieu nguyenLieu: danhSachNguyenLieu)
                {
                    if (nguyenLieu.getGia() >= Long.parseLong(giaTienDau)
                            && nguyenLieu.getGia() <= Long.parseLong(giaTienCuoi))
                    {
                        danhSachTam.add(nguyenLieu);
                    }
                }                    
                hienThiDanhSachNguyenLieu(danhSachTam, "Khac");
            }
            else
            {
                
            }
        }
    }//GEN-LAST:event_timKiem_CBxActionPerformed

    private void timKiem_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timKiem_BtnActionPerformed
        timKiemNguyenLieu();
    }//GEN-LAST:event_timKiem_BtnActionPerformed

    private void refresh_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh_BtnActionPerformed
        hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "CSDL");
        timKiem_TF.setText("");
    }//GEN-LAST:event_refresh_BtnActionPerformed

    private void sapXep_CBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sapXep_CBxActionPerformed
    
    }//GEN-LAST:event_sapXep_CBxActionPerformed

    private void giamDan_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giamDan_BtnActionPerformed
        if (sapXep_CBx.getSelectedIndex() == 0) // Sap xep theo ma nguyen lieu
        {
            sapXepNguyenLieu(danhSachNguyenLieu, "MaNguyenLieu", "Giam");
            hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        }
        else if (sapXep_CBx.getSelectedIndex() == 1) // Sap xep theo ten nguyen lieu
        {
            sapXepNguyenLieu(danhSachNguyenLieu, "TenNguyenLieu", "Giam");
            hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        }
        else if (sapXep_CBx.getSelectedIndex() == 2) // Sap xep theo don vi tinh
        {
            sapXepNguyenLieu(danhSachNguyenLieu, "DonViTinh", "Giam");
            hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        } 
        else if (sapXep_CBx.getSelectedIndex() == 3) // // Sap xep theo gia
        {
            sapXepNguyenLieu(danhSachNguyenLieu, "Gia", "Giam");
            hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        } 
        else if (sapXep_CBx.getSelectedIndex() == 4) // // Sap xep theo so luong
        {
            sapXepNguyenLieu(danhSachNguyenLieu, "SoLuong", "Giam");
            hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        }      
    }//GEN-LAST:event_giamDan_BtnActionPerformed

    private void tangDan_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tangDan_BtnActionPerformed
        if (sapXep_CBx.getSelectedIndex() == 0) // Sap xep theo ma nguyen lieu
        {
            sapXepNguyenLieu(danhSachNguyenLieu, "MaNguyenLieu", "Tang");
            hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        }
        else if (sapXep_CBx.getSelectedIndex() == 1) // Sap xep theo ten nguyen lieu
        {
            sapXepNguyenLieu(danhSachNguyenLieu, "TenNguyenLieu", "Tang");
            hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        }
        else if (sapXep_CBx.getSelectedIndex() == 2) // Sap xep theo don vi tinh
        {
            sapXepNguyenLieu(danhSachNguyenLieu, "DonViTinh", "Tang");
            hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        } 
        else if (sapXep_CBx.getSelectedIndex() == 3) // // Sap xep theo gia
        {
            sapXepNguyenLieu(danhSachNguyenLieu, "Gia", "Tang");
            hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        } 
        else if (sapXep_CBx.getSelectedIndex() == 4) // // Sap xep theo so luong
        {
            sapXepNguyenLieu(danhSachNguyenLieu, "SoLuong", "Tang");
            hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        }      
    }//GEN-LAST:event_tangDan_BtnActionPerformed

    private void nhap_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nhap_BtnActionPerformed
        int nguyenLieuDuocChon = nguyenLieu_Table.getSelectedRow();
        
        if (nguyenLieuDuocChon == -1)
        {
            JOptionPane.showMessageDialog(jLayeredPane, "Xin chọn nguyên liệu trước");
        }
        else
        {
            NguyenLieu_NhapXuatFrame nhapXuatNguyenLieuFrm = new NguyenLieu_NhapXuatFrame();
            nhapXuatNguyenLieuFrm.setOnFrameDispose(this);
            nhapXuatNguyenLieuFrm.thietLapDuLieu(danhSachNguyenLieu.get(nguyenLieuDuocChon));
            nhapXuatNguyenLieuFrm.setDanhSachNhap(danhSachNhap);
            nhapXuatNguyenLieuFrm.setDanhSachXuat(danhSachXuat);
            nhapXuatNguyenLieuFrm.setVisible(true);
            
        }
    }//GEN-LAST:event_nhap_BtnActionPerformed

    private void timKiem_TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timKiem_TFActionPerformed

    }//GEN-LAST:event_timKiem_TFActionPerformed

    private void timKiem_TFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_timKiem_TFKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
           timKiemNguyenLieu(); 
        }        
    }//GEN-LAST:event_timKiem_TFKeyPressed

    private void nguyenLieu_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nguyenLieu_TableMouseClicked
        int nguyenLieuDuocChon = nguyenLieu_Table.getSelectedRow();
        
        if (evt.getClickCount() == 2)
        {
            NguyenLieu_SuaFrame suaNguyenLieuFrm = new NguyenLieu_SuaFrame();
            suaNguyenLieuFrm.setOnFrameDispose(this);
            suaNguyenLieuFrm.thietLapDuLieu(danhSachNguyenLieu.get(nguyenLieuDuocChon));
            suaNguyenLieuFrm.setDanhSachNguyenLieu(danhSachNguyenLieu);
            suaNguyenLieuFrm.setVisible(true);    
        }       
    }//GEN-LAST:event_nguyenLieu_TableMouseClicked

    private void quayLaiCTNX_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quayLaiCTNX_BtnActionPerformed
        Util.doiPanel(jLayeredPane, homePanel);
    }//GEN-LAST:event_quayLaiCTNX_BtnActionPerformed

    private void timKiemCTNX_CBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timKiemCTNX_CBxActionPerformed
        int luaChonTimKiemCTNX = timKiemCTNX_CBx.getSelectedIndex();
        ArrayList<ChiTietNhapXuat> danhSachNhapTam = new ArrayList<>();
        ArrayList<ChiTietNhapXuat> danhSachXuatTam = new ArrayList<>();
        
        if (luaChonTimKiemCTNX == 2 || luaChonTimKiemCTNX == 5) // Tim kiem CTNX theo so luong hoac tong tien
        {
            JTextField giaTriDau_TF = new JTextField();
            JTextField giaTriCuoi_TF = new JTextField();
            Object inputs[] = {
                "Từ:", giaTriDau_TF,
                "Đến:", giaTriCuoi_TF
            };
            Object options[] = {
                "Tìm kiếm",
                "Hủy"
            };
            if (luaChonTimKiemCTNX == 2)
            {
                int luaChon = JOptionPane.showOptionDialog(null, inputs, "Tìm kiếm theo số lượng", 
                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                if (luaChon == JOptionPane.OK_OPTION)
                {
                    String giaTriDau = giaTriDau_TF.getText();
                    String giaTriCuoi = giaTriCuoi_TF.getText();

                    for (ChiTietNhapXuat chiTietNhap: danhSachNhap)
                    {
                        if (chiTietNhap.getSoLuong() >= Integer.parseInt(giaTriDau) &&
                                chiTietNhap.getSoLuong() <= Integer.parseInt(giaTriCuoi))
                        {
                            danhSachNhapTam.add(chiTietNhap);
                        }
                    } 
                    for (ChiTietNhapXuat chiTietXuat: danhSachXuat)
                    {
                        if (chiTietXuat.getSoLuong() >= Integer.parseInt(giaTriDau) &&
                                chiTietXuat.getSoLuong() <= Integer.parseInt(giaTriCuoi))
                        {
                            danhSachXuatTam.add(chiTietXuat);
                        }
                    }                     
                    hienThiDanhSachNhap(danhSachNhapTam, "Khac");
                    hienThiDanhSachXuat(danhSachXuatTam, "Khac");
                    hienThiTongSoLuongVaSoTienNhap(danhSachNhapTam);
                    hienThiTongSoLuongVaSoTienXuat(danhSachXuatTam);                    
                }
                else
                {

                }                  
            } 
            else if (luaChonTimKiemCTNX == 5)
            {
                int luaChon = JOptionPane.showOptionDialog(null, inputs, "Tìm kiếm theo tổng tiền", 
                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                if (luaChon == JOptionPane.OK_OPTION)
                {
                    String giaTriDau = giaTriDau_TF.getText();
                    String giaTriCuoi = giaTriCuoi_TF.getText();

                    for (ChiTietNhapXuat chiTietNhap: danhSachNhap)
                    {
                        if (chiTietNhap.getThanhTien() >= Long.parseLong(giaTriDau) &&
                                chiTietNhap.getThanhTien() <= Long.parseLong(giaTriCuoi))
                        {
                            danhSachNhapTam.add(chiTietNhap);
                        }
                    } 
                    for (ChiTietNhapXuat chiTietXuat: danhSachXuat)
                    {
                        if (chiTietXuat.getThanhTien() >= Long.parseLong(giaTriDau) &&
                                chiTietXuat.getThanhTien() <= Long.parseLong(giaTriCuoi))
                        {
                            danhSachXuatTam.add(chiTietXuat);
                        }
                    }                     
                    hienThiDanhSachNhap(danhSachNhapTam, "Khac");
                    hienThiDanhSachXuat(danhSachXuatTam, "Khac");
                    hienThiTongSoLuongVaSoTienNhap(danhSachNhapTam);
                    hienThiTongSoLuongVaSoTienXuat(danhSachXuatTam);                         
                }
                else
                {

                }                       
            }
        }
        else if (luaChonTimKiemCTNX == 4) // Tim kiem theo thoi gian
        {
            JTextField thoiDiem_TF = new JTextField("dd/MM/yyyy");
            thoiDiem_TF.setForeground(new Color(153,153,153));
            thoiDiem_TF.addFocusListener(new FocusAdapter() {                
                    @Override
                    public void focusGained(FocusEvent e)
                    {
                        if (thoiDiem_TF.getText().equals("dd/MM/yyyy"))
                        {
                            thoiDiem_TF.setText("");
                            thoiDiem_TF.setForeground(new Color(0,0,0));
                        }
                    }
                    @Override
                    public void focusLost(FocusEvent e)
                    {
                        if (thoiDiem_TF.getText().equals(""))
                        {
                            thoiDiem_TF.setText("dd/MM/yyyy");
                            thoiDiem_TF.setForeground(new Color(153,153,153));
                        }                        
                    }
                });         
            Object inputs[] = {
                "Ngày tháng năm:", thoiDiem_TF,
            };
            Object options[] = {
                "Tìm kiếm",
                "Hủy"
            }; 
            int luaChon = JOptionPane.showOptionDialog(null, inputs, "Tìm kiếm theo thời gian", 
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]); 
            if (luaChon == JOptionPane.OK_OPTION)
            {
                String thoiDiem = thoiDiem_TF.getText();
                for (ChiTietNhapXuat chiTietNhap: danhSachNhap)
                {
                    String ngayThangNam[] = chiTietNhap.getThoiGian().split(" ");
                    if (ngayThangNam[0].equals(thoiDiem))
                    {
                        danhSachNhapTam.add(chiTietNhap);
                    }
                }
                for (ChiTietNhapXuat chiTietXuat: danhSachXuat)
                {
                    String ngayThangNam[] = chiTietXuat.getThoiGian().split(" ");
                    if (ngayThangNam[0].equals(thoiDiem))
                    {
                        danhSachXuatTam.add(chiTietXuat);
                    }
                }    
                hienThiDanhSachNhap(danhSachNhapTam, "Khac");
                hienThiDanhSachXuat(danhSachXuatTam, "Khac");
                hienThiTongSoLuongVaSoTienNhap(danhSachNhapTam);
                hienThiTongSoLuongVaSoTienXuat(danhSachXuatTam);                     
            }
            else
            {
                
            }
        }
    }//GEN-LAST:event_timKiemCTNX_CBxActionPerformed

    private void timKiemCTNX_TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timKiemCTNX_TFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timKiemCTNX_TFActionPerformed

    private void timKiemCTNX_TFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_timKiemCTNX_TFKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_timKiemCTNX_TFKeyPressed

    private void sapXepCTNX_CBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sapXepCTNX_CBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sapXepCTNX_CBxActionPerformed

    private void timKiemCTNX_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timKiemCTNX_BtnActionPerformed
        timKiemCTNX();
    }//GEN-LAST:event_timKiemCTNX_BtnActionPerformed

    private void tangDanCTNX_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tangDanCTNX_BtnActionPerformed
        if (sapXepCTNX_CBx.getSelectedIndex() == 0) // Sap xep theo ma nguyen lieu
        {
            sapXepDanhSachNhap(danhSachNhap, "MaNguyenLieu", "Tang");
            sapXepDanhSachXuat(danhSachXuat, "MaNguyenLieu", "Tang");
            hienThiDanhSachNhap(danhSachNhap, "Khac");
            hienThiDanhSachXuat(danhSachXuat, "Khac");
        }
        else if (sapXepCTNX_CBx.getSelectedIndex() == 1) // Sap xep theo ten nguyen lieu
        {
            sapXepDanhSachNhap(danhSachNhap, "TenNguyenLieu", "Tang");
            sapXepDanhSachXuat(danhSachXuat, "TenNguyenLieu", "Tang");
            hienThiDanhSachNhap(danhSachNhap, "Khac");
            hienThiDanhSachXuat(danhSachXuat, "Khac");
        }
        else if (sapXepCTNX_CBx.getSelectedIndex() == 2) // Sap xep theo so luong
        {
            sapXepDanhSachNhap(danhSachNhap, "SoLuong", "Tang");
            sapXepDanhSachXuat(danhSachXuat, "SoLuong", "Tang");
            hienThiDanhSachNhap(danhSachNhap, "Khac");
            hienThiDanhSachXuat(danhSachXuat, "Khac");
        }
        else if (sapXepCTNX_CBx.getSelectedIndex() == 3) // Sap xep theo thoi gian
        {
            sapXepDanhSachNhap(danhSachNhap, "ThoiGian", "Tang");
            sapXepDanhSachXuat(danhSachXuat, "ThoiGian", "Tang");
            hienThiDanhSachNhap(danhSachNhap, "Khac");
            hienThiDanhSachXuat(danhSachXuat, "Khac");
        }
        else if (sapXepCTNX_CBx.getSelectedIndex() == 4) // Sap xep theo thanh tien
        {
            sapXepDanhSachNhap(danhSachNhap, "ThanhTien", "Tang");
            sapXepDanhSachXuat(danhSachXuat, "ThanhTien", "Tang");
            hienThiDanhSachNhap(danhSachNhap, "Khac");
            hienThiDanhSachXuat(danhSachXuat, "Khac");
        }
    }//GEN-LAST:event_tangDanCTNX_BtnActionPerformed

    private void giamDanCTNX_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giamDanCTNX_BtnActionPerformed
        if (sapXepCTNX_CBx.getSelectedIndex() == 0) // Sap xep theo ma nguyen lieu
        {
            sapXepDanhSachNhap(danhSachNhap, "MaNguyenLieu", "Giam");
            sapXepDanhSachXuat(danhSachXuat, "MaNguyenLieu", "Giam");
            hienThiDanhSachNhap(danhSachNhap, "Khac");
            hienThiDanhSachXuat(danhSachXuat, "Khac");
        }
        else if (sapXepCTNX_CBx.getSelectedIndex() == 1) // Sap xep theo ten nguyen lieu
        {
            sapXepDanhSachNhap(danhSachNhap, "TenNguyenLieu", "Giam");
            sapXepDanhSachXuat(danhSachXuat, "TenNguyenLieu", "Giam");
            hienThiDanhSachNhap(danhSachNhap, "Khac");
            hienThiDanhSachXuat(danhSachXuat, "Khac");
        }
        else if (sapXepCTNX_CBx.getSelectedIndex() == 2) // Sap xep theo so luong
        {
            sapXepDanhSachNhap(danhSachNhap, "SoLuong", "Giam");
            sapXepDanhSachXuat(danhSachXuat, "SoLuong", "Giam");
            hienThiDanhSachNhap(danhSachNhap, "Khac");
            hienThiDanhSachXuat(danhSachXuat, "Khac");
        }
        else if (sapXepCTNX_CBx.getSelectedIndex() == 3) // Sap xep theo thoi gian
        {
            sapXepDanhSachNhap(danhSachNhap, "ThoiGian", "Giam");
            sapXepDanhSachXuat(danhSachXuat, "ThoiGian", "Giam");
            hienThiDanhSachNhap(danhSachNhap, "Khac");
            hienThiDanhSachXuat(danhSachXuat, "Khac");
        }
        else if (sapXepCTNX_CBx.getSelectedIndex() == 4) // Sap xep theo thanh tien
        {
            sapXepDanhSachNhap(danhSachNhap, "ThanhTien", "Giam");
            sapXepDanhSachXuat(danhSachXuat, "ThanhTien", "Giam");
            hienThiDanhSachNhap(danhSachNhap, "Khac");
            hienThiDanhSachXuat(danhSachXuat, "Khac");
        }        
    }//GEN-LAST:event_giamDanCTNX_BtnActionPerformed

    private void refreshCTNX_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshCTNX_BtnActionPerformed
       hienThiDanhSachNhap(danhSachNhap, "CSDL");
       hienThiDanhSachXuat(danhSachXuat, "CSDL");
       hienThiTongSoLuongVaSoTienNhap(danhSachNhap);
       hienThiTongSoLuongVaSoTienXuat(danhSachXuat);            
       timKiemCTNX_TF.setText("");
    }//GEN-LAST:event_refreshCTNX_BtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel chiTietNhapXuat_Lbl;
    private javax.swing.JLabel chiTietNhap_Lbl;
    private javax.swing.JTable chiTietNhap_Table;
    private javax.swing.JLabel chiTietXuat_Lbl;
    private javax.swing.JTable chiTietXuat_Table;
    private javax.swing.JButton giamDanCTNX_Btn;
    private javax.swing.JButton giamDan_Btn;
    private javax.swing.JLabel goiYChinhSuaDuLieu_Lbl;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable nguyenLieu_Table;
    private javax.swing.JButton nhap_Btn;
    private javax.swing.JButton quayLaiCTNX_Btn;
    private javax.swing.JButton quayLai_Btn;
    private javax.swing.JButton refreshCTNX_Btn;
    private javax.swing.JButton refresh_Btn;
    private javax.swing.JComboBox<String> sapXepCTNX_CBx;
    private javax.swing.JLabel sapXepCTNX_Lbl;
    private javax.swing.JComboBox<String> sapXep_CBx;
    private javax.swing.JLabel sapXep_Lbl;
    private javax.swing.JButton tangDanCTNX_Btn;
    private javax.swing.JButton tangDan_Btn;
    private javax.swing.JButton themNguyenLieu_Btn;
    private javax.swing.JButton timKiemCTNX_Btn;
    private javax.swing.JComboBox<String> timKiemCTNX_CBx;
    private javax.swing.JLabel timKiemCTNX_Lbl;
    private javax.swing.JTextField timKiemCTNX_TF;
    private javax.swing.JButton timKiem_Btn;
    private javax.swing.JComboBox<String> timKiem_CBx;
    private javax.swing.JLabel timKiem_Lbl;
    private javax.swing.JTextField timKiem_TF;
    private javax.swing.JLabel tongSoLuongNhap_Lbl;
    private javax.swing.JLabel tongSoLuongXuat_Lbl;
    private javax.swing.JLabel tongSoTienNhap_Lbl;
    private javax.swing.JLabel tongSoTienXuat_Lbl;
    // End of variables declaration//GEN-END:variables

    // ===================================== CHUNG ====================================================
    @Override
    public void onFrameDispose() 
    {
        hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        hienThiDanhSachNhap(danhSachNhap, "Khac");
        hienThiDanhSachXuat(danhSachXuat, "Khac");
        hienThiTongSoLuongVaSoTienNhap(danhSachNhap);
        hienThiTongSoLuongVaSoTienXuat(danhSachXuat);             
    }
    
    public void khoiTaoBang()
    {
        // Thiet lap bang nguyen lieu
        dtm = new DefaultTableModel(){
        @Override
            public boolean isCellEditable(int row, int column) 
            {
                return false;
            }
        };
        dtm.setColumnIdentifiers(new Object[]
        {
            "Mã nguyên liệu", "Tên nguyên liệu", "Đơn vị tính", "Giá", "Số lượng tồn"
        });
        nguyenLieu_Table.setModel(dtm);
        
        // Thiet lap bang chi tiet nhap
        dtmChiTietNhap = new DefaultTableModel(){
        @Override
                public boolean isCellEditable(int row, int column)
                {
                    return false;
                }
        };
        dtmChiTietNhap.setColumnIdentifiers(new Object[]
        {
            "Mã NL", "Tên NL", "Số lượng", "Tài khoản", "Thời gian", "Thành tiền", "Ghi chú"
        });
        chiTietNhap_Table.setModel(dtmChiTietNhap);
        
        dtmChiTietXuat = new DefaultTableModel(){
        @Override
                public boolean isCellEditable(int row, int column)
                {
                    return false;
                }
        };
        dtmChiTietXuat.setColumnIdentifiers(new Object[]
        {
            "Mã NL", "Tên NL", "Số lượng", "Tài khoản", "Thời gian", "Thành tiền", "Ghi chú"
        });
        chiTietXuat_Table.setModel(dtmChiTietXuat);        
    }   
    
    public void setDanhSachNhap(ArrayList<ChiTietNhapXuat> danhSachNhap) {
        this.danhSachNhap = danhSachNhap;
    }

    public void setDanhSachXuat(ArrayList<ChiTietNhapXuat> danhSachXuat) {
        this.danhSachXuat = danhSachXuat;
    }
    
    //====================================== PANEL NGUYEN LIEU ========================================
    public void khoiTaoDuLieuComboBox()
    {
        // Thiet lap du lieu cho combo box sap xep
        danhSachSapXep_CBx.add("Mã nguyên liệu");
        danhSachSapXep_CBx.add("Tên nguyên liệu");
        danhSachSapXep_CBx.add("Đơn vị tính");
        danhSachSapXep_CBx.add("Giá");
        danhSachSapXep_CBx.add("Số lượng tồn");

        // Thiet lap du lieu cho combo box tim kiem
        danhSachTimKiem_CBx.add("Mã nguyên liệu");
        danhSachTimKiem_CBx.add("Tên nguyên liệu");
        danhSachTimKiem_CBx.add("Giá");
        
        for (String duLieuSapXep: danhSachSapXep_CBx)
        {
            sapXep_CBx.addItem(duLieuSapXep);
        }
        
        for (String duLieuTimKiem: danhSachTimKiem_CBx)
        {
            timKiem_CBx.addItem(duLieuTimKiem);
        }
    } 
    
    public void layDanhSachNguyenLieu()
    {
        Connection connect = Util.getConnection();
        String query = "select * from NguyenLieu";
        try
        {
            PreparedStatement ps = connect.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            while (rs.next())
            {
                NguyenLieu nguyenLieu = new NguyenLieu();
                nguyenLieu.setMaNguyenLieu(rs.getString("maNL"));
                nguyenLieu.setTenNguyenLieu(rs.getString("tenNL"));
                nguyenLieu.setMaDonVi(rs.getString("maDV"));
                nguyenLieu.setDonViTinh(nguyenLieu.layDonViTinh());
                nguyenLieu.setGia(rs.getLong("gia"));
                nguyenLieu.setSoLuong(rs.getInt("soLuong"));
                danhSachNguyenLieu.add(nguyenLieu);
            }
        }catch (SQLException ex)
        {
            System.out.println("Lay danh sach nguyen lieu that bai");
        }
    }
        
    public void hienThiDanhSachNguyenLieu(ArrayList<NguyenLieu> danhSachNguyenLieu, String truongHop)
    {
        dtm.setRowCount(0);
        if (truongHop.equals("CSDL")) // Load len tu CSDL
        {
            danhSachNguyenLieu.clear();
            layDanhSachNguyenLieu();
            for (NguyenLieu nguyenLieu: danhSachNguyenLieu)
            {
                dtm.addRow(new Object[]
                {
                    nguyenLieu.getMaNguyenLieu(), nguyenLieu.getTenNguyenLieu(), nguyenLieu.getDonViTinh(),
                    Util.formatCurrency(nguyenLieu.getGia()), Util.formatCurrency(nguyenLieu.getSoLuong())
                });
            }
        }
        else if (truongHop.equals("Khac")) // Ket qua tim kiem, sap xep, sau khi them, xoa, sua,...
        {
            for (NguyenLieu nguyenLieu: danhSachNguyenLieu)
            {
                dtm.addRow(new Object[]
                {
                    nguyenLieu.getMaNguyenLieu(), nguyenLieu.getTenNguyenLieu(), nguyenLieu.getDonViTinh(),
                    Util.formatCurrency(nguyenLieu.getGia()), Util.formatCurrency(nguyenLieu.getSoLuong())
                });
            }            
        }
    }
       
    public void sapXepNguyenLieu(ArrayList<NguyenLieu> danhSachNguyenLieu, String truongHop, String tangGiam)
    {
        if (truongHop.equals("MaNguyenLieu")) // Sap xep theo ma nguyen lieu
        {
            danhSachNguyenLieu.sort(new Comparator<NguyenLieu>() {
                @Override
                public int compare(NguyenLieu o1, NguyenLieu o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getMaNguyenLieu().compareTo(o2.getMaNguyenLieu());
                    }
                    return o2.getMaNguyenLieu().compareTo(o1.getMaNguyenLieu());
                }
            });
        }
        else if (truongHop.equals("TenNguyenLieu")) // Sap xep theo ten nguyen lieu
        {
            danhSachNguyenLieu.sort(new Comparator<NguyenLieu>() {
                @Override
                public int compare(NguyenLieu o1, NguyenLieu o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getTenNguyenLieu().compareTo(o2.getTenNguyenLieu());
                    }
                    return o2.getTenNguyenLieu().compareTo(o1.getTenNguyenLieu());
                }
            });            
        }
        else if (truongHop.equals("DonViTinh")) // Sap xep theo don vi tinh
        {
            danhSachNguyenLieu.sort(new Comparator<NguyenLieu>() {
                @Override
                public int compare(NguyenLieu o1, NguyenLieu o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getDonViTinh().compareTo(o2.getDonViTinh());
                    }
                    return o2.getDonViTinh().compareTo(o1.getDonViTinh());
                }
            });               
        }
        else if (truongHop.equals("Gia")) // Sap xep theo gia
        {
            danhSachNguyenLieu.sort(new Comparator<NguyenLieu>() {
                @Override
                public int compare(NguyenLieu o1, NguyenLieu o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return (int) (o1.getGia() - o2.getGia());
                    }                    
                    return (int) (o2.getGia() - o1.getGia());
                }
            });               
        }        
        else if (truongHop.equals("SoLuong")) // Sap xep theo so luong
        {
            danhSachNguyenLieu.sort(new Comparator<NguyenLieu>() {
                @Override
                public int compare(NguyenLieu o1, NguyenLieu o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getSoLuong() - o2.getSoLuong();
                    }                         
                    return o2.getSoLuong() - o1.getSoLuong();
                }
            });               
        }
    }    
    
    public void timKiemNguyenLieu()
    {
        String duLieuCanTim = timKiem_TF.getText();
        ArrayList<NguyenLieu> danhSachTam = new ArrayList<>();
        int luaChonTimKiem = timKiem_CBx.getSelectedIndex();
        
        if (duLieuCanTim.equals(""))
        {
            JOptionPane.showMessageDialog(jLayeredPane, "Vui lòng nhập thông tin cần tìm kiếm");
            return;
        }
        if (luaChonTimKiem == 0) // Tim theo ma nguyen lieu
        {
            for (NguyenLieu nguyenLieu: danhSachNguyenLieu)
            {
                if (nguyenLieu.getMaNguyenLieu().trim().toLowerCase().contains(duLieuCanTim.trim().toLowerCase()))
                {
                    danhSachTam.add(nguyenLieu);
                }
            }
            hienThiDanhSachNguyenLieu(danhSachTam, "Khac");
        }
        else if (luaChonTimKiem == 1) // Tim theo ten nguyen lieu
        {
            for (NguyenLieu nguyenLieu: danhSachNguyenLieu)
            {
                if (nguyenLieu.getTenNguyenLieu().trim().toLowerCase().contains(duLieuCanTim.trim().toLowerCase()))
                {
                    danhSachTam.add(nguyenLieu);
                }
            }
            hienThiDanhSachNguyenLieu(danhSachTam, "Khac");
        }
        // Tim kiem theo gia: timKiem_CBxActionPerformed        
    }       
    
    // ================================ PANEL CHI TIET NHAP XUAT ===================================
    public void khoiTaoDuLieuComboBoxCTNX()
    {
        danhSachTimKiemCTNX_CBx.add("Mã nguyên liệu");
        danhSachTimKiemCTNX_CBx.add("Tên nguyên liệu");
        danhSachTimKiemCTNX_CBx.add("Số lượng");
        danhSachTimKiemCTNX_CBx.add("Tài khoản");
        danhSachTimKiemCTNX_CBx.add("Thời gian");
        danhSachTimKiemCTNX_CBx.add("Thành tiền");
        
        danhSachSapXepCTNX_CBx.add("Mã nguyên liệu");
        danhSachSapXepCTNX_CBx.add("Tên nguyên liệu");
        danhSachSapXepCTNX_CBx.add("Số lượng");
        danhSachSapXepCTNX_CBx.add("Thời gian");
        danhSachSapXepCTNX_CBx.add("Thành tiền");
        
        for (String timKiemCTNX: danhSachTimKiemCTNX_CBx)
        {
            timKiemCTNX_CBx.addItem(timKiemCTNX);
        }
        
        for (String sapXepCTNX: danhSachSapXepCTNX_CBx)
        {
            sapXepCTNX_CBx.addItem(sapXepCTNX);
        }
    }   

   public void layDanhSachNhap()
    {
        Connection connect = Util.getConnection();
        String query = "select CTNX.maNL, NL.tenNL, CTNX.soLuong, NX.tenTK, NX.tg, NL.gia, NX.ghiChu"
                    +  " from NhapXuat as NX, ChiTietNhapXuat as CTNX, NguyenLieu as NL"
                    +  " where NL.maNL = CTNX.maNL"
                    +  "    and NX.maNX = CTNX.maNX"
                    +  "    and LEFT(CTNX.maNX, 1) = 'N'";
        try
        {
            PreparedStatement ps = connect.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            while (rs.next())
            {
                ChiTietNhapXuat chiTietNhap = new ChiTietNhapXuat();
                chiTietNhap.setMaNguyenLieu(rs.getString("maNL"));
                chiTietNhap.setTenNguyenLieu(rs.getString("tenNL"));
                chiTietNhap.setSoLuong(rs.getInt("soLuong"));
                chiTietNhap.setTaiKhoan(rs.getString("tenTK"));
                String thoiGian = chiTietNhap.dinhDangThoiGianNgayThangNam(rs.getString("tg"));
                chiTietNhap.setThoiGian(thoiGian);
                chiTietNhap.setThanhTien(rs.getLong("gia")*chiTietNhap.getSoLuong());
                chiTietNhap.setGhiChu(rs.getString("ghiChu"));
                danhSachNhap.add(chiTietNhap);
            }
            rs.close();
            ps.close();
            connect.close();
        }catch (SQLException ex)
        {
            System.out.println("Lay danh sach nhap that bai");
        }
    }
    
    public void layDanhSachXuat()
    {
        Connection connect = Util.getConnection();
        String query = "select CTNX.maNL, NL.tenNL, CTNX.soLuong, NX.tenTK, NX.tg, NL.gia, NX.ghiChu"
                    +  " from NhapXuat as NX, ChiTietNhapXuat as CTNX, NguyenLieu as NL"
                    +  " where NL.maNL = CTNX.maNL"
                    +  "    and NX.maNX = CTNX.maNX"
                    +  "    and LEFT(CTNX.maNX, 1) = 'X'";
        try
        {
            PreparedStatement ps = connect.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            while (rs.next())
            {
                ChiTietNhapXuat chiTietXuat = new ChiTietNhapXuat();
                chiTietXuat.setMaNguyenLieu(rs.getString("maNL"));
                chiTietXuat.setTenNguyenLieu(rs.getString("tenNL"));
                chiTietXuat.setSoLuong(rs.getInt("soLuong"));
                chiTietXuat.setTaiKhoan(rs.getString("tenTK"));
                String thoiGian = chiTietXuat.dinhDangThoiGianNgayThangNam(rs.getString("tg"));
                chiTietXuat.setThoiGian(thoiGian);
                chiTietXuat.setThanhTien(rs.getLong("gia")*chiTietXuat.getSoLuong());
                chiTietXuat.setGhiChu(rs.getString("ghiChu"));
                danhSachXuat.add(chiTietXuat);
            }
            rs.close();
            ps.close();
            connect.close();
        }catch (SQLException ex)
        {
            System.out.println("Lay danh sach xuat that bai");
        }
    }      
   
   public void hienThiDanhSachNhap(ArrayList<ChiTietNhapXuat> danhSachNhap, String truongHop)
    {
        dtmChiTietNhap.setRowCount(0);
        if (truongHop.equals("CSDL")) // Load len tu CSDL
        {
            danhSachNhap.clear();
            layDanhSachNhap();
            for (ChiTietNhapXuat chiTietNhap: danhSachNhap)
            {
                dtmChiTietNhap.addRow(new Object[]
                {
                    chiTietNhap.getMaNguyenLieu(), chiTietNhap.getTenNguyenLieu(), Util.formatCurrency(chiTietNhap.getSoLuong()),
                    chiTietNhap.getTaiKhoan(), chiTietNhap.getThoiGian(), Util.formatCurrency(chiTietNhap.getThanhTien()), 
                    chiTietNhap.getGhiChu()
                });
            }
        }
        else if (truongHop.equals("Khac")) // Ket qua tim kiem, sap xep
        {
            for (ChiTietNhapXuat chiTietNhap: danhSachNhap)
            {
                dtmChiTietNhap.addRow(new Object[]
                {
                    chiTietNhap.getMaNguyenLieu(), chiTietNhap.getTenNguyenLieu(), Util.formatCurrency(chiTietNhap.getSoLuong()),
                    chiTietNhap.getTaiKhoan(), chiTietNhap.getThoiGian(), Util.formatCurrency(chiTietNhap.getThanhTien()), 
                    chiTietNhap.getGhiChu()
                });
            }          
        }
    }   
    
    public void hienThiDanhSachXuat(ArrayList<ChiTietNhapXuat> danhSachXuat, String truongHop)
    {
        dtmChiTietXuat.setRowCount(0);
        if (truongHop.equals("CSDL")) // Load len tu CSDL
        {
            danhSachXuat.clear();
            layDanhSachXuat();
            for (ChiTietNhapXuat chiTietXuat: danhSachXuat)
            {
                dtmChiTietXuat.addRow(new Object[]
                {
                    chiTietXuat.getMaNguyenLieu(), chiTietXuat.getTenNguyenLieu(), Util.formatCurrency(chiTietXuat.getSoLuong()),
                    chiTietXuat.getTaiKhoan(), chiTietXuat.getThoiGian(), Util.formatCurrency(chiTietXuat.getThanhTien()),
                    chiTietXuat.getGhiChu()
                });
            }
        }
        else if (truongHop.equals("Khac")) // Ket qua tim kiem, sap xep
        {
            for (ChiTietNhapXuat chiTietXuat: danhSachXuat)
            {
                dtmChiTietXuat.addRow(new Object[]
                {
                    chiTietXuat.getMaNguyenLieu(), chiTietXuat.getTenNguyenLieu(), Util.formatCurrency(chiTietXuat.getSoLuong()),
                    chiTietXuat.getTaiKhoan(), chiTietXuat.getThoiGian(), Util.formatCurrency(chiTietXuat.getThanhTien()),
                    chiTietXuat.getGhiChu()
                });
            }        
        }
    } 
    
    public void hienThiTongSoLuongVaSoTienNhap(ArrayList<ChiTietNhapXuat> danhSachNhapXuat)
    {
        long tongSoLuong = 0;
        long tongSoTien = 0;
        for (ChiTietNhapXuat chiTietNhapXuat: danhSachNhapXuat)
        {
            tongSoLuong = tongSoLuong + chiTietNhapXuat.getSoLuong();
            tongSoTien = tongSoTien + chiTietNhapXuat.getThanhTien();
        }
        tongSoLuongNhap_Lbl.setText("Số lượng nhập: " + Util.formatCurrency(tongSoLuong));
        tongSoTienNhap_Lbl.setText("Tổng tiền nhập: " + Util.formatCurrency(tongSoTien) + " VND");
    }
    
    public void hienThiTongSoLuongVaSoTienXuat(ArrayList<ChiTietNhapXuat> danhSachNhapXuat)
    {
        long tongSoLuong = 0;
        long tongSoTien = 0;
        for (ChiTietNhapXuat chiTietNhapXuat: danhSachNhapXuat)
        {
            tongSoLuong = tongSoLuong + chiTietNhapXuat.getSoLuong();
            tongSoTien = tongSoTien + chiTietNhapXuat.getThanhTien();
        }
        tongSoLuongXuat_Lbl.setText("Số lượng xuất: " + Util.formatCurrency(tongSoLuong));
        tongSoTienXuat_Lbl.setText("Tổng tiền xuất: " + Util.formatCurrency(tongSoTien) + " VND");
    }       

    public void sapXepDanhSachNhap(ArrayList<ChiTietNhapXuat> danhSachNhap, String truongHop, String tangGiam)
    {  
        if (truongHop.equals("MaNguyenLieu")) // Sap xep theo ma nguyen lieu
        {
            danhSachNhap.sort(new Comparator<ChiTietNhapXuat>() {
                @Override
                public int compare(ChiTietNhapXuat o1, ChiTietNhapXuat o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getMaNguyenLieu().compareTo(o2.getMaNguyenLieu());
                    }
                    return o2.getMaNguyenLieu().compareTo(o1.getMaNguyenLieu());
                }
            });
        }     
        else if (truongHop.equals("TenNguyenLieu")) // Sap xep theo ten nguyen lieu
        {
            danhSachNhap.sort(new Comparator<ChiTietNhapXuat>() {
                @Override
                public int compare(ChiTietNhapXuat o1, ChiTietNhapXuat o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getTenNguyenLieu().compareTo(o2.getTenNguyenLieu());
                    }
                    return o2.getTenNguyenLieu().compareTo(o1.getTenNguyenLieu());
                }
            });
        }  
        else if (truongHop.equals("SoLuong")) // Sap xep theo so luong
        {
            danhSachNhap.sort(new Comparator<ChiTietNhapXuat>() {
                @Override
                public int compare(ChiTietNhapXuat o1, ChiTietNhapXuat o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getSoLuong() - o2.getSoLuong();
                    }
                    return o2.getSoLuong() - o1.getSoLuong();
                }
            });
        }  
        else if (truongHop.equals("ThoiGian")) // Sap xep theo thoi gian
        {
            danhSachNhap.sort(new Comparator<ChiTietNhapXuat>() {
                @Override
                public int compare(ChiTietNhapXuat o1, ChiTietNhapXuat o2) 
                {
                    String thoiGian1 = o1.dinhDangThoiGianNamThangNgay(o1.getThoiGian());
                    String thoiGian2 = o2.dinhDangThoiGianNamThangNgay(o2.getThoiGian());
                    if (tangGiam.equals("Tang"))
                    {
                        return thoiGian1.compareTo(thoiGian2);
                    }
                    return thoiGian2.compareTo(thoiGian1);
                }
            });
        }  
        else if (truongHop.equals("ThanhTien")) // Sap xep theo thanh tien
        {
            danhSachNhap.sort(new Comparator<ChiTietNhapXuat>() {
                @Override
                public int compare(ChiTietNhapXuat o1, ChiTietNhapXuat o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return (int) (o1.getThanhTien() - o2.getThanhTien());
                    }
                    return (int) (o2.getThanhTien() - o1.getThanhTien());
                }
            });        
        }
    }  
 
    public void sapXepDanhSachXuat(ArrayList<ChiTietNhapXuat> danhSachXuat, String truongHop, String tangGiam)
    {      
        if (truongHop.equals("MaNguyenLieu")) // Sap xep theo ma nguyen lieu
        {
            danhSachXuat.sort(new Comparator<ChiTietNhapXuat>() {
                @Override
                public int compare(ChiTietNhapXuat o1, ChiTietNhapXuat o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getMaNguyenLieu().compareTo(o2.getMaNguyenLieu());
                    }
                    return o2.getMaNguyenLieu().compareTo(o1.getMaNguyenLieu());
                }
            });
        }     
        else if (truongHop.equals("TenNguyenLieu")) // Sap xep theo ten nguyen lieu
        {
            danhSachXuat.sort(new Comparator<ChiTietNhapXuat>() {
                @Override
                public int compare(ChiTietNhapXuat o1, ChiTietNhapXuat o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getTenNguyenLieu().compareTo(o2.getTenNguyenLieu());
                    }
                    return o2.getTenNguyenLieu().compareTo(o1.getTenNguyenLieu());
                }
            });
        }  
        else if (truongHop.equals("SoLuong")) // Sap xep theo so luong
        {
            danhSachXuat.sort(new Comparator<ChiTietNhapXuat>() {
                @Override
                public int compare(ChiTietNhapXuat o1, ChiTietNhapXuat o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getSoLuong() - o2.getSoLuong();
                    }
                    return o2.getSoLuong() - o1.getSoLuong();
                }
            });
        }  
        else if (truongHop.equals("ThoiGian")) // Sap xep theo thoi gian
        {
            danhSachXuat.sort(new Comparator<ChiTietNhapXuat>() {
                @Override
                public int compare(ChiTietNhapXuat o1, ChiTietNhapXuat o2) 
                {
                    String thoiGian1 = o1.dinhDangThoiGianNamThangNgay(o1.getThoiGian());
                    String thoiGian2 = o2.dinhDangThoiGianNamThangNgay(o2.getThoiGian());
                    if (tangGiam.equals("Tang"))
                    {
                        return thoiGian1.compareTo(thoiGian2);
                    }
                    return thoiGian2.compareTo(thoiGian1);
                }
            });
        }  
        else if (truongHop.equals("ThanhTien")) // Sap xep theo thanh tien
        {
            danhSachXuat.sort(new Comparator<ChiTietNhapXuat>() {
                @Override
                public int compare(ChiTietNhapXuat o1, ChiTietNhapXuat o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return (int) (o1.getThanhTien() - o2.getThanhTien());
                    }
                    return (int) (o2.getThanhTien() - o1.getThanhTien());
                }
            });        
        }        
    }          
    
    public void timKiemCTNX()
    {
        String duLieuCanTim = timKiemCTNX_TF.getText();
        ArrayList<ChiTietNhapXuat> danhSachNhapTam = new ArrayList<>();
        ArrayList<ChiTietNhapXuat> danhSachXuatTam = new ArrayList<>();
        int luaChonTimKiem = timKiemCTNX_CBx.getSelectedIndex();
        
        if (duLieuCanTim.equals(""))
        {
            JOptionPane.showMessageDialog(jLayeredPane, "Vui lòng nhập thông tin cần tìm kiếm");
            return;
        }
        if (luaChonTimKiem == 0) // Tim theo ma nguyen lieu
        {
            for (ChiTietNhapXuat chiTietNhap: danhSachNhap)
            {
                if (chiTietNhap.getMaNguyenLieu().trim().toLowerCase().contains(duLieuCanTim.trim().toLowerCase()))
                {
                    danhSachNhapTam.add(chiTietNhap);
                }
            }
            for (ChiTietNhapXuat chiTietXuat: danhSachXuat)
            {
                if (chiTietXuat.getMaNguyenLieu().trim().toLowerCase().contains(duLieuCanTim.trim().toLowerCase()))
                {
                    danhSachXuatTam.add(chiTietXuat);
                }
            }            
            hienThiDanhSachNhap(danhSachNhapTam, "Khac");
            hienThiDanhSachXuat(danhSachXuatTam, "Khac");
            hienThiTongSoLuongVaSoTienNhap(danhSachNhapTam);
            hienThiTongSoLuongVaSoTienXuat(danhSachXuatTam);                 
        }
        else if (luaChonTimKiem == 1) // Tim theo ten nguyen lieu
        {
            for (ChiTietNhapXuat chiTietNhap: danhSachNhap)
            {
                if (chiTietNhap.getTenNguyenLieu().trim().toLowerCase().contains(duLieuCanTim.trim().toLowerCase()))
                {
                    danhSachNhapTam.add(chiTietNhap);
                }
            }
            for (ChiTietNhapXuat chiTietXuat: danhSachXuat)
            {
                if (chiTietXuat.getTenNguyenLieu().trim().toLowerCase().contains(duLieuCanTim.trim().toLowerCase()))
                {
                    danhSachXuatTam.add(chiTietXuat);
                }
            }            
            hienThiDanhSachNhap(danhSachNhapTam, "Khac");
            hienThiDanhSachXuat(danhSachXuatTam, "Khac");
            hienThiTongSoLuongVaSoTienNhap(danhSachNhapTam);
            hienThiTongSoLuongVaSoTienXuat(danhSachXuatTam);                 
        } 
        else if (luaChonTimKiem == 3) // Tim theo tai khoan
        {
            for (ChiTietNhapXuat chiTietNhap: danhSachNhap)
            {
                if (chiTietNhap.getTaiKhoan().trim().toLowerCase().contains(duLieuCanTim.trim().toLowerCase()))
                {
                    danhSachNhapTam.add(chiTietNhap);
                }
            }
            for (ChiTietNhapXuat chiTietXuat: danhSachXuat)
            {
                if (chiTietXuat.getTaiKhoan().trim().toLowerCase().contains(duLieuCanTim.trim().toLowerCase()))
                {
                    danhSachXuatTam.add(chiTietXuat);
                }
            }            
            hienThiDanhSachNhap(danhSachNhapTam, "Khac");
            hienThiDanhSachXuat(danhSachXuatTam, "Khac");
            hienThiTongSoLuongVaSoTienNhap(danhSachNhapTam);
            hienThiTongSoLuongVaSoTienXuat(danhSachXuatTam);                 
        }               
    }           
}
