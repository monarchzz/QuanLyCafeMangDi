/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlycafemangdi.view;

import java.awt.Color;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JLayeredPane;
import javax.swing.table.DefaultTableModel; 
import quanlycafemangdi.Util;
import java.sql.*;
import java.util.Comparator;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import quanlycafemangdi.Design;

/**
 *
 * @author admin
 */
// Phuong thuc chung: dong 1200
// Phuong thuc cua Panel Nguyen Lieu: dong 1210
// Phuong thuc cua Panel Chi Tiet Nhap Xuat: dong 1400
import quanlycafemangdi.model.NguyenLieu;
import quanlycafemangdi.model.NhapXuat;
public class NguyenLieu_Panel extends javax.swing.JPanel implements IOnFrameDispose{

    private JLayeredPane jLayeredPane;
    
    private DefaultTableModel dtmNguyenLieu;
    private DefaultTableModel dtmChiTietNhap;
    private DefaultTableModel dtmChiTietXuat;
    
    private ArrayList<NguyenLieu> danhSachNguyenLieu = new ArrayList<>(); 
    private ArrayList<NhapXuat> danhSachNhap = new ArrayList<>();
    private ArrayList<NhapXuat> danhSachXuat = new ArrayList<>();
    
    // Du lieu cua combo box
    private ArrayList<String> danhSachSapXep_CBx = new ArrayList<>();
    private ArrayList<String> danhSachTimKiem_CBx = new ArrayList<>();
    
    private ArrayList<String> danhSachSapXepChiTietNhap_CBx = new ArrayList<>();
    private ArrayList<String> danhSachTimKiemChiTietNhap_CBx = new ArrayList<>();
    
    private ArrayList<String> danhSachSapXepChiTietXuat_CBx = new ArrayList<>();
    private ArrayList<String> danhSachTimKiemChiTietXuat_CBx = new ArrayList<>();    

    
    public NguyenLieu_Panel()
    {
        initComponents();        
        
        dtmNguyenLieu = (DefaultTableModel)nguyenLieu_Table.getModel();
        dtmChiTietXuat = (DefaultTableModel)chiTietXuat_Table.getModel();
        dtmChiTietNhap = (DefaultTableModel)chiTietNhap_Table.getModel();
        
        khoiTaoDuLieuComboBox();
        khoiTaoDuLieuComboBoxChiTietNhap();        
        khoiTaoDuLieuComboBoxChiTietXuat();  
        
        Design.thietKeBang(nguyenLieu_Table, "Lon");
        Design.thietKeBang(chiTietNhap_Table, "Lon");
        Design.thietKeBang(chiTietXuat_Table, "Lon");
        
        hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "CSDL");
        hienThiDanhSachNhap(danhSachNhap, "CSDL");
        hienThiDanhSachXuat(danhSachXuat, "CSDL");
        hienThiTongSoTienNhap(danhSachNhap);       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        refresh_Btn = new javax.swing.JButton();
        timKiem_TF = new javax.swing.JTextField();
        nhap_Btn = new javax.swing.JButton();
        goiYChinhSuaDuLieu_Lbl = new javax.swing.JLabel();
        timKiem_CBx = new javax.swing.JComboBox<>();
        sapXep_Lbl = new javax.swing.JLabel();
        timKiem_Btn = new javax.swing.JButton();
        sapXep_CBx = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        nguyenLieu_Table = new javax.swing.JTable();
        themNguyenLieu_Btn = new javax.swing.JButton();
        timKiem_Lbl = new javax.swing.JLabel();
        tangDan_Btn = new javax.swing.JButton();
        giamDan_Btn = new javax.swing.JButton();
        danhSachNguyenLieu_Lbl = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        chiTietNhapXuat_Lbl = new javax.swing.JLabel();
        chiTietNhapXuat_LPn = new javax.swing.JLayeredPane();
        chiTietNhap_Pn = new javax.swing.JPanel();
        sapXepChiTietNhap_Lbl = new javax.swing.JLabel();
        chiTietNhap_Lbl = new javax.swing.JLabel();
        giamDanChiTietNhap_Btn = new javax.swing.JButton();
        tongSoTienNhap_Lbl = new javax.swing.JLabel();
        refreshChiTietNhap_Btn = new javax.swing.JButton();
        tangDanChiTietNhap_Btn = new javax.swing.JButton();
        timKiemChiTietNhap_CBx = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        chiTietNhap_Table = new javax.swing.JTable();
        sapXepChiTietNhap_CBx = new javax.swing.JComboBox<>();
        timKiemChiTietNhap_Lbl = new javax.swing.JLabel();
        tongSoTien_Lbl = new javax.swing.JLabel();
        chiTietXuat_Pn = new javax.swing.JPanel();
        chiTietXuat_Lbl = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        chiTietXuat_Table = new javax.swing.JTable();
        timKiemChiTietXuat_Lbl = new javax.swing.JLabel();
        timKiemChiTietXuat_CBx = new javax.swing.JComboBox<>();
        sapXepChiTietXuat_Lbl = new javax.swing.JLabel();
        giamDanChiTietXuat_Btn = new javax.swing.JButton();
        tangDanChiTietXuat_Btn = new javax.swing.JButton();
        sapXepChiTietXuat_CBx = new javax.swing.JComboBox<>();
        refreshChiTietXuat_Btn = new javax.swing.JButton();
        doiPanelChiTietNhap_Btn = new javax.swing.JButton();
        doiPanelChiTietXuat_Btn = new javax.swing.JButton();
        goiY_Lbl = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1000, 600));

        jTabbedPane1.setBackground(new java.awt.Color(32, 136, 203));
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        refresh_Btn.setBackground(new java.awt.Color(32, 136, 203));
        refresh_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/refreshWhite.png"))); // NOI18N
        refresh_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh_BtnActionPerformed(evt);
            }
        });

        timKiem_TF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        timKiem_TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timKiem_TFActionPerformed(evt);
            }
        });
        timKiem_TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                timKiem_TFKeyPressed(evt);
            }
        });

        nhap_Btn.setBackground(new java.awt.Color(32, 136, 203));
        nhap_Btn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nhap_Btn.setForeground(new java.awt.Color(255, 255, 255));
        nhap_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/nhapWhite.png"))); // NOI18N
        nhap_Btn.setText("Nhập nguyên liệu về kho");
        nhap_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nhap_BtnActionPerformed(evt);
            }
        });

        goiYChinhSuaDuLieu_Lbl.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        goiYChinhSuaDuLieu_Lbl.setText("*Double click để chỉnh sửa dữ liệu");

        timKiem_CBx.setBackground(new java.awt.Color(255, 204, 204));
        timKiem_CBx.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        timKiem_CBx.setPreferredSize(new java.awt.Dimension(35, 25));
        timKiem_CBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timKiem_CBxActionPerformed(evt);
            }
        });

        sapXep_Lbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sapXep_Lbl.setText("Sắp xếp theo: ");

        timKiem_Btn.setBackground(new java.awt.Color(114, 102, 186));
        timKiem_Btn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        timKiem_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/search_white.png"))); // NOI18N
        timKiem_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timKiem_BtnActionPerformed(evt);
            }
        });

        sapXep_CBx.setBackground(new java.awt.Color(255, 204, 204));
        sapXep_CBx.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sapXep_CBx.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        sapXep_CBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sapXep_CBxActionPerformed(evt);
            }
        });

        nguyenLieu_Table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        nguyenLieu_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã nguyên liệu", "Tên nguyên liệu", "Đơn vị tính", "Giá", "Số lượng tồn"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        nguyenLieu_Table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nguyenLieu_Table.setIntercellSpacing(new java.awt.Dimension(0, 1));
        nguyenLieu_Table.setRowHeight(25);
        nguyenLieu_Table.setSelectionBackground(new java.awt.Color(0, 204, 255));
        nguyenLieu_Table.getTableHeader().setReorderingAllowed(false);
        nguyenLieu_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nguyenLieu_TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(nguyenLieu_Table);

        themNguyenLieu_Btn.setBackground(new java.awt.Color(32, 136, 203));
        themNguyenLieu_Btn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        themNguyenLieu_Btn.setForeground(new java.awt.Color(255, 255, 255));
        themNguyenLieu_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/themNguyenLieuMoiWhite.png"))); // NOI18N
        themNguyenLieu_Btn.setText("Thêm nguyên liệu mới");
        themNguyenLieu_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themNguyenLieu_BtnActionPerformed(evt);
            }
        });

        timKiem_Lbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        timKiem_Lbl.setText("Tìm kiếm theo:");

        tangDan_Btn.setBackground(new java.awt.Color(114, 102, 186));
        tangDan_Btn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tangDan_Btn.setForeground(new java.awt.Color(255, 255, 255));
        tangDan_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/tangDanWhite.png"))); // NOI18N
        tangDan_Btn.setText("Tăng dần");
        tangDan_Btn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tangDan_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tangDan_BtnActionPerformed(evt);
            }
        });

        giamDan_Btn.setBackground(new java.awt.Color(114, 102, 186));
        giamDan_Btn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        giamDan_Btn.setForeground(new java.awt.Color(255, 255, 255));
        giamDan_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/giamDanWhite.png"))); // NOI18N
        giamDan_Btn.setText("Giảm dần");
        giamDan_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giamDan_BtnActionPerformed(evt);
            }
        });

        danhSachNguyenLieu_Lbl.setBackground(new java.awt.Color(114, 102, 186));
        danhSachNguyenLieu_Lbl.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        danhSachNguyenLieu_Lbl.setForeground(new java.awt.Color(255, 255, 255));
        danhSachNguyenLieu_Lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        danhSachNguyenLieu_Lbl.setText("Danh sách nguyên liệu");
        danhSachNguyenLieu_Lbl.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(danhSachNguyenLieu_Lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(timKiem_Lbl, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                            .addComponent(sapXep_Lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(timKiem_CBx, 0, 160, Short.MAX_VALUE)
                            .addComponent(sapXep_CBx, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tangDan_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(giamDan_Btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(timKiem_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timKiem_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(refresh_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(goiYChinhSuaDuLieu_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(nhap_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(themNguyenLieu_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(238, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(danhSachNguyenLieu_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tangDan_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sapXep_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sapXep_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(giamDan_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(timKiem_TF)
                        .addGap(1, 1, 1))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(timKiem_Btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(timKiem_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timKiem_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(refresh_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(goiYChinhSuaDuLieu_Lbl)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nhap_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(themNguyenLieu_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(87, 87, 87))
        );

        jTabbedPane1.addTab("Nguyên liệu", jPanel1);

        jPanel2.setPreferredSize(new java.awt.Dimension(1019, 493));

        chiTietNhapXuat_Lbl.setBackground(new java.awt.Color(114, 102, 186));
        chiTietNhapXuat_Lbl.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        chiTietNhapXuat_Lbl.setForeground(new java.awt.Color(255, 255, 255));
        chiTietNhapXuat_Lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        chiTietNhapXuat_Lbl.setText("Chi tiết nhập xuất");
        chiTietNhapXuat_Lbl.setMaximumSize(new java.awt.Dimension(161, 25));
        chiTietNhapXuat_Lbl.setMinimumSize(new java.awt.Dimension(161, 25));
        chiTietNhapXuat_Lbl.setOpaque(true);
        chiTietNhapXuat_Lbl.setVerifyInputWhenFocusTarget(false);

        chiTietNhapXuat_LPn.setLayout(new java.awt.CardLayout());

        sapXepChiTietNhap_Lbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sapXepChiTietNhap_Lbl.setText("Sắp xếp theo: ");

        chiTietNhap_Lbl.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        chiTietNhap_Lbl.setText("Nhập nguyên liệu");

        giamDanChiTietNhap_Btn.setBackground(new java.awt.Color(114, 102, 186));
        giamDanChiTietNhap_Btn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        giamDanChiTietNhap_Btn.setForeground(new java.awt.Color(255, 255, 255));
        giamDanChiTietNhap_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/giamDanWhite.png"))); // NOI18N
        giamDanChiTietNhap_Btn.setText("Giảm dần");
        giamDanChiTietNhap_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giamDanChiTietNhap_BtnActionPerformed(evt);
            }
        });

        tongSoTienNhap_Lbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tongSoTienNhap_Lbl.setText("Tổng số tiền nhập nguyên liệu:");

        refreshChiTietNhap_Btn.setBackground(new java.awt.Color(32, 136, 203));
        refreshChiTietNhap_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/refreshWhite.png"))); // NOI18N
        refreshChiTietNhap_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshChiTietNhap_BtnActionPerformed(evt);
            }
        });

        tangDanChiTietNhap_Btn.setBackground(new java.awt.Color(114, 102, 186));
        tangDanChiTietNhap_Btn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tangDanChiTietNhap_Btn.setForeground(new java.awt.Color(255, 255, 255));
        tangDanChiTietNhap_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/tangDanWhite.png"))); // NOI18N
        tangDanChiTietNhap_Btn.setText("Tăng dần");
        tangDanChiTietNhap_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tangDanChiTietNhap_BtnActionPerformed(evt);
            }
        });

        timKiemChiTietNhap_CBx.setBackground(new java.awt.Color(255, 204, 204));
        timKiemChiTietNhap_CBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timKiemChiTietNhap_CBxActionPerformed(evt);
            }
        });

        chiTietNhap_Table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chiTietNhap_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã nhập xuất", "Tài khoản", "Thời gian", "Trạng thái", "Thành tiền", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        chiTietNhap_Table.setIntercellSpacing(new java.awt.Dimension(0, 1));
        chiTietNhap_Table.setSelectionBackground(new java.awt.Color(0, 204, 255));
        chiTietNhap_Table.getTableHeader().setReorderingAllowed(false);
        chiTietNhap_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chiTietNhap_TableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(chiTietNhap_Table);

        sapXepChiTietNhap_CBx.setBackground(new java.awt.Color(255, 204, 204));
        sapXepChiTietNhap_CBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sapXepChiTietNhap_CBxActionPerformed(evt);
            }
        });

        timKiemChiTietNhap_Lbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        timKiemChiTietNhap_Lbl.setText("Tìm kiếm theo:");

        tongSoTien_Lbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tongSoTien_Lbl.setForeground(new java.awt.Color(255, 0, 51));
        tongSoTien_Lbl.setText("1234567");

        javax.swing.GroupLayout chiTietNhap_PnLayout = new javax.swing.GroupLayout(chiTietNhap_Pn);
        chiTietNhap_Pn.setLayout(chiTietNhap_PnLayout);
        chiTietNhap_PnLayout.setHorizontalGroup(
            chiTietNhap_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(chiTietNhap_PnLayout.createSequentialGroup()
                .addComponent(refreshChiTietNhap_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(chiTietNhap_PnLayout.createSequentialGroup()
                .addGroup(chiTietNhap_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(chiTietNhap_PnLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(chiTietNhap_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(chiTietNhap_PnLayout.createSequentialGroup()
                                .addComponent(timKiemChiTietNhap_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(timKiemChiTietNhap_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(chiTietNhap_PnLayout.createSequentialGroup()
                                .addComponent(sapXepChiTietNhap_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(sapXepChiTietNhap_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(tangDanChiTietNhap_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(giamDanChiTietNhap_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(chiTietNhap_PnLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(tongSoTienNhap_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tongSoTien_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(361, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, chiTietNhap_PnLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(chiTietNhap_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(390, 390, 390))
        );
        chiTietNhap_PnLayout.setVerticalGroup(
            chiTietNhap_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chiTietNhap_PnLayout.createSequentialGroup()
                .addComponent(chiTietNhap_Lbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(chiTietNhap_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(chiTietNhap_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tangDanChiTietNhap_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sapXepChiTietNhap_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sapXepChiTietNhap_Lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(giamDanChiTietNhap_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(chiTietNhap_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timKiemChiTietNhap_Lbl)
                    .addComponent(timKiemChiTietNhap_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refreshChiTietNhap_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(chiTietNhap_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tongSoTienNhap_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tongSoTien_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        chiTietNhapXuat_LPn.add(chiTietNhap_Pn, "card2");

        chiTietXuat_Lbl.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        chiTietXuat_Lbl.setText("Xuất nguyên liệu");

        chiTietXuat_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã nhập xuất", "Tài khoản", "Thời gian", "Trạng thái", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        chiTietXuat_Table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chiTietXuat_Table.setIntercellSpacing(new java.awt.Dimension(0, 1));
        chiTietXuat_Table.setSelectionBackground(new java.awt.Color(0, 204, 255));
        chiTietXuat_Table.getTableHeader().setReorderingAllowed(false);
        chiTietXuat_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chiTietXuat_TableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(chiTietXuat_Table);

        timKiemChiTietXuat_Lbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        timKiemChiTietXuat_Lbl.setText("Tìm kiếm theo:");

        timKiemChiTietXuat_CBx.setBackground(new java.awt.Color(255, 204, 204));
        timKiemChiTietXuat_CBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timKiemChiTietXuat_CBxActionPerformed(evt);
            }
        });

        sapXepChiTietXuat_Lbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sapXepChiTietXuat_Lbl.setText("Sắp xếp theo:");

        giamDanChiTietXuat_Btn.setBackground(new java.awt.Color(114, 102, 186));
        giamDanChiTietXuat_Btn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        giamDanChiTietXuat_Btn.setForeground(new java.awt.Color(255, 255, 255));
        giamDanChiTietXuat_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/giamDanWhite.png"))); // NOI18N
        giamDanChiTietXuat_Btn.setText("Giảm dần");
        giamDanChiTietXuat_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giamDanChiTietXuat_BtnActionPerformed(evt);
            }
        });

        tangDanChiTietXuat_Btn.setBackground(new java.awt.Color(114, 102, 186));
        tangDanChiTietXuat_Btn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tangDanChiTietXuat_Btn.setForeground(new java.awt.Color(255, 255, 255));
        tangDanChiTietXuat_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/tangDanWhite.png"))); // NOI18N
        tangDanChiTietXuat_Btn.setText("Tăng dần");
        tangDanChiTietXuat_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tangDanChiTietXuat_BtnActionPerformed(evt);
            }
        });

        sapXepChiTietXuat_CBx.setBackground(new java.awt.Color(255, 204, 204));

        refreshChiTietXuat_Btn.setBackground(new java.awt.Color(32, 136, 203));
        refreshChiTietXuat_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/refreshWhite.png"))); // NOI18N
        refreshChiTietXuat_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshChiTietXuat_BtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout chiTietXuat_PnLayout = new javax.swing.GroupLayout(chiTietXuat_Pn);
        chiTietXuat_Pn.setLayout(chiTietXuat_PnLayout);
        chiTietXuat_PnLayout.setHorizontalGroup(
            chiTietXuat_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(chiTietXuat_PnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(chiTietXuat_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(timKiemChiTietXuat_Lbl, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(sapXepChiTietXuat_Lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(chiTietXuat_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(timKiemChiTietXuat_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sapXepChiTietXuat_CBx, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(chiTietXuat_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(chiTietXuat_PnLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(tangDanChiTietXuat_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(giamDanChiTietXuat_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(chiTietXuat_PnLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(chiTietXuat_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 360, Short.MAX_VALUE))
            .addGroup(chiTietXuat_PnLayout.createSequentialGroup()
                .addComponent(refreshChiTietXuat_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        chiTietXuat_PnLayout.setVerticalGroup(
            chiTietXuat_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chiTietXuat_PnLayout.createSequentialGroup()
                .addComponent(chiTietXuat_Lbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(chiTietXuat_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tangDanChiTietXuat_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(giamDanChiTietXuat_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sapXepChiTietXuat_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sapXepChiTietXuat_Lbl))
                .addGap(24, 24, 24)
                .addGroup(chiTietXuat_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timKiemChiTietXuat_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timKiemChiTietXuat_Lbl))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(refreshChiTietXuat_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        chiTietNhapXuat_LPn.add(chiTietXuat_Pn, "card3");

        doiPanelChiTietNhap_Btn.setBackground(new java.awt.Color(32, 136, 203));
        doiPanelChiTietNhap_Btn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        doiPanelChiTietNhap_Btn.setForeground(new java.awt.Color(255, 255, 255));
        doiPanelChiTietNhap_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/leftWhite.png"))); // NOI18N
        doiPanelChiTietNhap_Btn.setText("Nhập");
        doiPanelChiTietNhap_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doiPanelChiTietNhap_BtnActionPerformed(evt);
            }
        });

        doiPanelChiTietXuat_Btn.setBackground(new java.awt.Color(32, 136, 203));
        doiPanelChiTietXuat_Btn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        doiPanelChiTietXuat_Btn.setForeground(new java.awt.Color(255, 255, 255));
        doiPanelChiTietXuat_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/rightWhite.png"))); // NOI18N
        doiPanelChiTietXuat_Btn.setText("Xuất");
        doiPanelChiTietXuat_Btn.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        doiPanelChiTietXuat_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doiPanelChiTietXuat_BtnActionPerformed(evt);
            }
        });

        goiY_Lbl.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        goiY_Lbl.setText("*Double click để xem chi tiết các nguyên liệu được nhập/xuất");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(chiTietNhapXuat_LPn)
            .addComponent(chiTietNhapXuat_Lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(366, 366, 366)
                        .addComponent(doiPanelChiTietNhap_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(doiPanelChiTietXuat_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(goiY_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(chiTietNhapXuat_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(chiTietNhapXuat_LPn, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(goiY_Lbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doiPanelChiTietXuat_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doiPanelChiTietNhap_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Chi tiết nhập xuất", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void themNguyenLieu_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themNguyenLieu_BtnActionPerformed
        NguyenLieu_ThemFrame themNguyenLieuFrm = new NguyenLieu_ThemFrame();
        themNguyenLieuFrm.setOnFrameDispose(this);
        themNguyenLieuFrm.setDanhSachNguyenLieu(danhSachNguyenLieu);
        themNguyenLieuFrm.setDanhSachNhap(danhSachNhap);
        themNguyenLieuFrm.setVisible(true);
    }//GEN-LAST:event_themNguyenLieu_BtnActionPerformed

    private void timKiem_CBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timKiem_CBxActionPerformed
        int luaChonTimKiem = timKiem_CBx.getSelectedIndex();
        ArrayList<NguyenLieu> danhSachTam = new ArrayList<>();
        
        if (luaChonTimKiem == 2)
        {
            JTextField giaTienDau_TF = new JTextField();
            JTextField giaTienCuoi_TF = new JTextField();
            Object inputs[] = {
                "Từ:", giaTienDau_TF,
                "Đến:", giaTienCuoi_TF
            };
            Object options[] = {
                "Tìm kiếm",
                "Hủy"
            };
            int luaChon = JOptionPane.showOptionDialog(null, inputs, "Tìm kiếm nguyên liệu theo giá", 
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            if (luaChon == JOptionPane.OK_OPTION)
            {
                String giaTienDau = giaTienDau_TF.getText();
                String giaTienCuoi = giaTienCuoi_TF.getText();
                
                for (NguyenLieu nguyenLieu: danhSachNguyenLieu)
                {
                    if (nguyenLieu.getGia() >= Long.parseLong(giaTienDau)
                            && nguyenLieu.getGia() <= Long.parseLong(giaTienCuoi))
                    {
                        danhSachTam.add(nguyenLieu);
                    }
                }                    
                hienThiDanhSachNguyenLieu(danhSachTam, "Khac");
            }
            else
            {
                
            }
        }
    }//GEN-LAST:event_timKiem_CBxActionPerformed

    private void timKiem_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timKiem_BtnActionPerformed
        timKiemNguyenLieu();
    }//GEN-LAST:event_timKiem_BtnActionPerformed

    private void refresh_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh_BtnActionPerformed
        hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "CSDL");
        timKiem_TF.setText("");
    }//GEN-LAST:event_refresh_BtnActionPerformed

    private void sapXep_CBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sapXep_CBxActionPerformed
    
    }//GEN-LAST:event_sapXep_CBxActionPerformed

    private void giamDan_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giamDan_BtnActionPerformed
        if (sapXep_CBx.getSelectedIndex() == 0) // Sap xep theo ma nguyen lieu
        {
            sapXepNguyenLieu(danhSachNguyenLieu, "MaNguyenLieu", "Giam");
            hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        }
        else if (sapXep_CBx.getSelectedIndex() == 1) // Sap xep theo ten nguyen lieu
        {
            sapXepNguyenLieu(danhSachNguyenLieu, "TenNguyenLieu", "Giam");
            hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        }
        else if (sapXep_CBx.getSelectedIndex() == 2) // Sap xep theo don vi tinh
        {
            sapXepNguyenLieu(danhSachNguyenLieu, "DonViTinh", "Giam");
            hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        } 
        else if (sapXep_CBx.getSelectedIndex() == 3) // // Sap xep theo gia
        {
            sapXepNguyenLieu(danhSachNguyenLieu, "Gia", "Giam");
            hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        } 
        else if (sapXep_CBx.getSelectedIndex() == 4) // // Sap xep theo so luong
        {
            sapXepNguyenLieu(danhSachNguyenLieu, "SoLuong", "Giam");
            hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        }      
    }//GEN-LAST:event_giamDan_BtnActionPerformed

    private void tangDan_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tangDan_BtnActionPerformed
        if (sapXep_CBx.getSelectedIndex() == 0) // Sap xep theo ma nguyen lieu
        {
            sapXepNguyenLieu(danhSachNguyenLieu, "MaNguyenLieu", "Tang");
            hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        }
        else if (sapXep_CBx.getSelectedIndex() == 1) // Sap xep theo ten nguyen lieu
        {
            sapXepNguyenLieu(danhSachNguyenLieu, "TenNguyenLieu", "Tang");
            hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        }
        else if (sapXep_CBx.getSelectedIndex() == 2) // Sap xep theo don vi tinh
        {
            sapXepNguyenLieu(danhSachNguyenLieu, "DonViTinh", "Tang");
            hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        } 
        else if (sapXep_CBx.getSelectedIndex() == 3) // // Sap xep theo gia
        {
            sapXepNguyenLieu(danhSachNguyenLieu, "Gia", "Tang");
            hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        } 
        else if (sapXep_CBx.getSelectedIndex() == 4) // // Sap xep theo so luong
        {
            sapXepNguyenLieu(danhSachNguyenLieu, "SoLuong", "Tang");
            hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        }      
    }//GEN-LAST:event_tangDan_BtnActionPerformed

    private void nhap_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nhap_BtnActionPerformed
//        nhapXuat_Dialog.setLocationRelativeTo(null);
//        nhapXuat_Dialog.setSize(280, 100);
//        nhapXuat_Dialog.setVisible(true);
        NguyenLieu_NhapFrame nguyenLieuNhapFrm = new NguyenLieu_NhapFrame();
        nguyenLieuNhapFrm.setDanhSachNguyenLieu(danhSachNguyenLieu);
        nguyenLieuNhapFrm.setDanhSachNhap(danhSachNhap);
        nguyenLieuNhapFrm.setOnFrameDispose(this);        
        nguyenLieuNhapFrm.thietLapDuLieu();
        nguyenLieuNhapFrm.setVisible(true);
    }//GEN-LAST:event_nhap_BtnActionPerformed

    private void timKiem_TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timKiem_TFActionPerformed

    }//GEN-LAST:event_timKiem_TFActionPerformed

    private void timKiem_TFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_timKiem_TFKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
           timKiemNguyenLieu(); 
        }        
    }//GEN-LAST:event_timKiem_TFKeyPressed

    private void nguyenLieu_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nguyenLieu_TableMouseClicked
        int nguyenLieuDuocChon = nguyenLieu_Table.getSelectedRow();
        
        if (evt.getClickCount() == 2)
        {
            NguyenLieu_SuaFrame suaNguyenLieuFrm = new NguyenLieu_SuaFrame();
            suaNguyenLieuFrm.setOnFrameDispose(this);
            suaNguyenLieuFrm.thietLapDuLieu(danhSachNguyenLieu.get(nguyenLieuDuocChon));
            suaNguyenLieuFrm.setDanhSachNguyenLieu(danhSachNguyenLieu);
            suaNguyenLieuFrm.setVisible(true);    
        }       
    }//GEN-LAST:event_nguyenLieu_TableMouseClicked

    private void timKiemChiTietNhap_CBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timKiemChiTietNhap_CBxActionPerformed
        int luaChonTimKiemCTNX = timKiemChiTietNhap_CBx.getSelectedIndex();
        ArrayList<NhapXuat> danhSachNhapTam = new ArrayList<>();

        if (luaChonTimKiemCTNX == 1) // Tim kiem theo thoi gian
        {
            JTextField thoiDiem_TF = new JTextField("dd/MM/yyyy");
            thoiDiem_TF.setForeground(new Color(153,153,153));
            thoiDiem_TF.addFocusListener(new FocusAdapter() {                
                    @Override
                    public void focusGained(FocusEvent e) // Khi nhap chuot vao TF phan goi y se mat
                    {
                        if (thoiDiem_TF.getText().equals("dd/MM/yyyy"))
                        {
                            thoiDiem_TF.setText("");
                            thoiDiem_TF.setForeground(new Color(0,0,0));
                        }
                    }
                    @Override
                    public void focusLost(FocusEvent e) // Khi nhap chuot cho khac phan goi y se xuat hien
                    {
                        if (thoiDiem_TF.getText().equals(""))
                        {
                            thoiDiem_TF.setText("dd/MM/yyyy");
                            thoiDiem_TF.setForeground(new Color(153,153,153));
                        }                        
                    }
                });         
            Object inputs[] = {
                "Ngày tháng năm:", thoiDiem_TF,
            };
            Object options[] = {
                "Tìm kiếm",
                "Hủy"
            }; 
            int luaChon = JOptionPane.showOptionDialog(null, inputs, "Tìm kiếm theo thời gian", 
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]); 
            if (luaChon == JOptionPane.OK_OPTION)
            {
                String thoiDiem = thoiDiem_TF.getText();
                for (NhapXuat chiTietNhap: danhSachNhap)
                {
                    String date = chiTietNhap.getThoiGian().toString();
                    date = chiTietNhap.dinhDangThoiGianNgayThangNam(date);
                    String ngayThangNam[] = date.split(" "); // Chi lay phan ngay thang nam
                    if (ngayThangNam[0].equals(thoiDiem))
                    {
                        danhSachNhapTam.add(chiTietNhap);
                    }
                }
                hienThiDanhSachNhap(danhSachNhapTam, "Khac");
                hienThiTongSoTienNhap(danhSachNhapTam);                  
            }
            else
            {
                
            }
        }        
        else if (luaChonTimKiemCTNX == 2) // Tim kiem theo thanh tien
        {
            JTextField giaTriDau_TF = new JTextField();
            JTextField giaTriCuoi_TF = new JTextField();
            Object inputs[] = {
                "Từ:", giaTriDau_TF,
                "Đến:", giaTriCuoi_TF
            };
            Object options[] = {
                "Tìm kiếm",
                "Hủy"
            };
            int luaChon = JOptionPane.showOptionDialog(null, inputs, "Tìm kiếm theo thành tiền", 
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            if (luaChon == JOptionPane.OK_OPTION)
            {
                String giaTriDau = giaTriDau_TF.getText();
                String giaTriCuoi = giaTriCuoi_TF.getText();
                for (NhapXuat chiTietNhap: danhSachNhap)
                {
                    if (chiTietNhap.getThanhTien() >= Long.parseLong(giaTriDau) &&
                            chiTietNhap.getThanhTien() <= Long.parseLong(giaTriCuoi))
                   {
                        danhSachNhapTam.add(chiTietNhap);
                    }
                }                 
                    hienThiDanhSachNhap(danhSachNhapTam, "Khac");
                    hienThiTongSoTienNhap(danhSachNhapTam);                    
            }
            else
            {
                
            } 
        }
    }//GEN-LAST:event_timKiemChiTietNhap_CBxActionPerformed

    private void sapXepChiTietNhap_CBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sapXepChiTietNhap_CBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sapXepChiTietNhap_CBxActionPerformed

    private void tangDanChiTietNhap_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tangDanChiTietNhap_BtnActionPerformed
        if (sapXepChiTietNhap_CBx.getSelectedIndex() == 1) // Sap xep theo ma nhap xuat
        {
            sapXepDanhSachNhapXuat(danhSachNhap, "MaNhapXuat", "Tang");
            hienThiDanhSachNhap(danhSachNhap, "Khac");
        }
        else if (sapXepChiTietNhap_CBx.getSelectedIndex() == 2) // Sap xep theo tai khoan
        {
            sapXepDanhSachNhapXuat(danhSachNhap, "TaiKhoan", "Tang");
            hienThiDanhSachNhap(danhSachNhap, "Khac");
        }
        else if (sapXepChiTietNhap_CBx.getSelectedIndex() == 3) // Sap xep theo thoi gian
        {
            sapXepDanhSachNhapXuat(danhSachNhap, "ThoiGian", "Tang");
            hienThiDanhSachNhap(danhSachNhap, "Khac");
        }
        else if (sapXepChiTietNhap_CBx.getSelectedIndex() == 4) // Sap xep theo thanh tien
        {
            sapXepDanhSachNhapXuat(danhSachNhap, "ThanhTien", "Tang");
            hienThiDanhSachNhap(danhSachNhap, "Khac");
        }
        else if (sapXepChiTietNhap_CBx.getSelectedIndex() == 5) // Sap xep theo trang thai
        {
            sapXepDanhSachNhapXuat(danhSachNhap, "TrangThai", "Tang");
            hienThiDanhSachNhap(danhSachNhap, "Khac");
        }        
    }//GEN-LAST:event_tangDanChiTietNhap_BtnActionPerformed

    private void giamDanChiTietNhap_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giamDanChiTietNhap_BtnActionPerformed
        if (sapXepChiTietNhap_CBx.getSelectedIndex() == 1) // Sap xep theo ma nhap xuat
        {
            sapXepDanhSachNhapXuat(danhSachNhap, "MaNhapXuat", "Giam");
            hienThiDanhSachNhap(danhSachNhap, "Khac");
        }
        else if (sapXepChiTietNhap_CBx.getSelectedIndex() == 2) // Sap xep theo tai khoan
        {
            sapXepDanhSachNhapXuat(danhSachNhap, "TaiKhoan", "Giam");
            hienThiDanhSachNhap(danhSachNhap, "Khac");
        }
        else if (sapXepChiTietNhap_CBx.getSelectedIndex() == 3) // Sap xep theo thoi gian
        {
            sapXepDanhSachNhapXuat(danhSachNhap, "ThoiGian", "Giam");
            hienThiDanhSachNhap(danhSachNhap, "Khac");
        }
        else if (sapXepChiTietNhap_CBx.getSelectedIndex() == 4) // Sap xep theo thanh tien
        {
            sapXepDanhSachNhapXuat(danhSachNhap, "ThanhTien", "Giam");
            hienThiDanhSachNhap(danhSachNhap, "Khac");
        }
        else if (sapXepChiTietNhap_CBx.getSelectedIndex() == 5) // Sap xep theo trang thai
        {
            sapXepDanhSachNhapXuat(danhSachNhap, "TrangThai", "Giam");
            hienThiDanhSachNhap(danhSachNhap, "Khac");
        }                        
    }//GEN-LAST:event_giamDanChiTietNhap_BtnActionPerformed

    private void refreshChiTietNhap_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshChiTietNhap_BtnActionPerformed
       hienThiDanhSachNhap(danhSachNhap, "CSDL");
       hienThiTongSoTienNhap(danhSachNhap);     
    }//GEN-LAST:event_refreshChiTietNhap_BtnActionPerformed

    private void doiPanelChiTietNhap_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doiPanelChiTietNhap_BtnActionPerformed
        Util.doiPanel(chiTietNhapXuat_LPn, chiTietNhap_Pn);
    }//GEN-LAST:event_doiPanelChiTietNhap_BtnActionPerformed

    private void doiPanelChiTietXuat_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doiPanelChiTietXuat_BtnActionPerformed
        Util.doiPanel(chiTietNhapXuat_LPn, chiTietXuat_Pn);
    }//GEN-LAST:event_doiPanelChiTietXuat_BtnActionPerformed

    private void timKiemChiTietXuat_CBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timKiemChiTietXuat_CBxActionPerformed
        int luaChonTimKiemChiTietXuat = timKiemChiTietXuat_CBx.getSelectedIndex();
        ArrayList<NhapXuat> danhSachXuatTam = new ArrayList<>();

        if (luaChonTimKiemChiTietXuat == 1) // Tim kiem theo thoi gian
        {
            JTextField thoiDiem_TF = new JTextField("dd/MM/yyyy");
            thoiDiem_TF.setForeground(new Color(153,153,153));
            thoiDiem_TF.addFocusListener(new FocusAdapter() {                
                    @Override
                    public void focusGained(FocusEvent e) // Khi nhap chuot vao TF phan goi y se mat
                    {
                        if (thoiDiem_TF.getText().equals("dd/MM/yyyy"))
                        {
                            thoiDiem_TF.setText("");
                            thoiDiem_TF.setForeground(new Color(0,0,0));
                        }
                    }
                    @Override
                    public void focusLost(FocusEvent e) // Khi nhap chuot cho khac phan goi y se xuat hien
                    {
                        if (thoiDiem_TF.getText().equals(""))
                        {
                            thoiDiem_TF.setText("dd/MM/yyyy");
                            thoiDiem_TF.setForeground(new Color(153,153,153));
                        }                        
                    }
                });         
            Object inputs[] = {
                "Ngày tháng năm:", thoiDiem_TF,
            };
            Object options[] = {
                "Tìm kiếm",
                "Hủy"
            }; 
            int luaChon = JOptionPane.showOptionDialog(null, inputs, "Tìm kiếm theo thời gian", 
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]); 
            if (luaChon == JOptionPane.OK_OPTION)
            {
                String thoiDiem = thoiDiem_TF.getText();
                for (NhapXuat chiTietXuat: danhSachXuat)
                {
                    String date = chiTietXuat.getThoiGian().toString();
                    date = chiTietXuat.dinhDangThoiGianNgayThangNam(date);
                    String ngayThangNam[] = date.split(" "); // Chi lay phan ngay thang nam
                    if (ngayThangNam[0].equals(thoiDiem))
                    {
                        danhSachXuatTam.add(chiTietXuat);
                    }
                }
                hienThiDanhSachNhap(danhSachXuatTam, "Khac");             
            }
            else
            {
                
            }
        }     
    }//GEN-LAST:event_timKiemChiTietXuat_CBxActionPerformed

    private void refreshChiTietXuat_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshChiTietXuat_BtnActionPerformed
        hienThiDanhSachXuat(danhSachXuat, "CSDL");
    }//GEN-LAST:event_refreshChiTietXuat_BtnActionPerformed

    private void tangDanChiTietXuat_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tangDanChiTietXuat_BtnActionPerformed
        if (sapXepChiTietXuat_CBx.getSelectedIndex() == 1) // Sap xep theo ma nhap xuat
        {
            sapXepDanhSachNhapXuat(danhSachXuat, "MaNhapXuat", "Tang");
            hienThiDanhSachXuat(danhSachXuat, "Khac");
        }
        else if (sapXepChiTietXuat_CBx.getSelectedIndex() == 2) // Sap xep theo tai khoan
        {
            sapXepDanhSachNhapXuat(danhSachXuat, "TaiKhoan", "Tang");
            hienThiDanhSachXuat(danhSachXuat, "Khac");
        }
        else if (sapXepChiTietXuat_CBx.getSelectedIndex() == 3) // Sap xep theo thoi gian
        {
            sapXepDanhSachNhapXuat(danhSachXuat, "ThoiGian", "Tang");
            hienThiDanhSachXuat(danhSachXuat, "Khac");
        }
    }//GEN-LAST:event_tangDanChiTietXuat_BtnActionPerformed

    private void giamDanChiTietXuat_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giamDanChiTietXuat_BtnActionPerformed
        if (sapXepChiTietXuat_CBx.getSelectedIndex() == 1) // Sap xep theo ma nhap xuat
        {
            sapXepDanhSachNhapXuat(danhSachXuat, "MaNhapXuat", "Giam");
            hienThiDanhSachXuat(danhSachXuat, "Khac");
        }
        else if (sapXepChiTietXuat_CBx.getSelectedIndex() == 2) // Sap xep theo tai khoan
        {
            sapXepDanhSachNhapXuat(danhSachXuat, "TaiKhoan", "Giam");
            hienThiDanhSachXuat(danhSachXuat, "Khac");
        }
        else if (sapXepChiTietXuat_CBx.getSelectedIndex() == 3) // Sap xep theo thoi gian
        {
            sapXepDanhSachNhapXuat(danhSachXuat, "ThoiGian", "Giam");
            hienThiDanhSachXuat(danhSachXuat, "Khac");
        }
    }//GEN-LAST:event_giamDanChiTietXuat_BtnActionPerformed

    private void chiTietXuat_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chiTietXuat_TableMouseClicked
        int chiTietXuatDuocChon = chiTietXuat_Table.getSelectedRow();
        
        if (evt.getClickCount() == 2)
        {
            NguyenLieu_HienThiNguyenLieuNhapXuatFrame hienThiNguyenLieuNhapXuatFrm = new NguyenLieu_HienThiNguyenLieuNhapXuatFrame();
            hienThiNguyenLieuNhapXuatFrm.setDanhSachNguyenLieu(danhSachNguyenLieu);
            hienThiNguyenLieuNhapXuatFrm.setNhapXuat(danhSachXuat.get(chiTietXuatDuocChon));
            hienThiNguyenLieuNhapXuatFrm.khoiTaoBangChiTietXuat();
            hienThiNguyenLieuNhapXuatFrm.hienThiNguyenLieuXuat();
            hienThiNguyenLieuNhapXuatFrm.setVisible(true);
        }
    }//GEN-LAST:event_chiTietXuat_TableMouseClicked

    private void chiTietNhap_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chiTietNhap_TableMouseClicked
        int chiTietNhapDuocChon = chiTietNhap_Table.getSelectedRow();
        
        if (evt.getClickCount() == 2)
        {
            NguyenLieu_HienThiNguyenLieuNhapXuatFrame hienThiNguyenLieuNhapXuatFrm = new NguyenLieu_HienThiNguyenLieuNhapXuatFrame();
            hienThiNguyenLieuNhapXuatFrm.setDanhSachNguyenLieu(danhSachNguyenLieu);
            hienThiNguyenLieuNhapXuatFrm.setNhapXuat(danhSachNhap.get(chiTietNhapDuocChon));
            hienThiNguyenLieuNhapXuatFrm.khoiTaoBangChiTietNhap();
            if (danhSachNhap.get(chiTietNhapDuocChon).getTrangThai().equals("0"))
            {
               hienThiNguyenLieuNhapXuatFrm.hienThiNguyenLieuNhap("0"); 
            }
            else
            {
                hienThiNguyenLieuNhapXuatFrm.hienThiNguyenLieuNhap("2"); // Khong tinh thanh tien khi tra nguyen lieu
            }          
            hienThiNguyenLieuNhapXuatFrm.setVisible(true);
        }
    }//GEN-LAST:event_chiTietNhap_TableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane chiTietNhapXuat_LPn;
    private javax.swing.JLabel chiTietNhapXuat_Lbl;
    private javax.swing.JLabel chiTietNhap_Lbl;
    private javax.swing.JPanel chiTietNhap_Pn;
    private javax.swing.JTable chiTietNhap_Table;
    private javax.swing.JLabel chiTietXuat_Lbl;
    private javax.swing.JPanel chiTietXuat_Pn;
    private javax.swing.JTable chiTietXuat_Table;
    private javax.swing.JLabel danhSachNguyenLieu_Lbl;
    private javax.swing.JButton doiPanelChiTietNhap_Btn;
    private javax.swing.JButton doiPanelChiTietXuat_Btn;
    private javax.swing.JButton giamDanChiTietNhap_Btn;
    private javax.swing.JButton giamDanChiTietXuat_Btn;
    private javax.swing.JButton giamDan_Btn;
    private javax.swing.JLabel goiYChinhSuaDuLieu_Lbl;
    private javax.swing.JLabel goiY_Lbl;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable nguyenLieu_Table;
    private javax.swing.JButton nhap_Btn;
    private javax.swing.JButton refreshChiTietNhap_Btn;
    private javax.swing.JButton refreshChiTietXuat_Btn;
    private javax.swing.JButton refresh_Btn;
    private javax.swing.JComboBox<String> sapXepChiTietNhap_CBx;
    private javax.swing.JLabel sapXepChiTietNhap_Lbl;
    private javax.swing.JComboBox<String> sapXepChiTietXuat_CBx;
    private javax.swing.JLabel sapXepChiTietXuat_Lbl;
    private javax.swing.JComboBox<String> sapXep_CBx;
    private javax.swing.JLabel sapXep_Lbl;
    private javax.swing.JButton tangDanChiTietNhap_Btn;
    private javax.swing.JButton tangDanChiTietXuat_Btn;
    private javax.swing.JButton tangDan_Btn;
    private javax.swing.JButton themNguyenLieu_Btn;
    private javax.swing.JComboBox<String> timKiemChiTietNhap_CBx;
    private javax.swing.JLabel timKiemChiTietNhap_Lbl;
    private javax.swing.JComboBox<String> timKiemChiTietXuat_CBx;
    private javax.swing.JLabel timKiemChiTietXuat_Lbl;
    private javax.swing.JButton timKiem_Btn;
    private javax.swing.JComboBox<String> timKiem_CBx;
    private javax.swing.JLabel timKiem_Lbl;
    private javax.swing.JTextField timKiem_TF;
    private javax.swing.JLabel tongSoTienNhap_Lbl;
    private javax.swing.JLabel tongSoTien_Lbl;
    // End of variables declaration//GEN-END:variables

    // ===================================== CHUNG ====================================================
    @Override
    public void onFrameDispose() 
    {
        hienThiDanhSachNguyenLieu(danhSachNguyenLieu, "Khac");
        hienThiDanhSachNhap(danhSachNhap, "Khac");
        hienThiDanhSachXuat(danhSachXuat, "Khac");
        hienThiTongSoTienNhap(danhSachNhap);          
    } 
    
//    public void roundButton()
//    {
//        try
//        {
//            UIManager.setLookAndFeel("com.jtattoo.plaf.aluminium.AluminiumLookAndFeel");
//        }catch (Exception ex)
//        {
//            ex.printStackTrace();
//        }
//    }
    //====================================== PANEL NGUYEN LIEU ========================================
    public void khoiTaoDuLieuComboBox()
    {
        // Thiet lap du lieu cho combo box sap xep
        danhSachSapXep_CBx.add("Mã nguyên liệu");
        danhSachSapXep_CBx.add("Tên nguyên liệu");
        danhSachSapXep_CBx.add("Đơn vị tính");
        danhSachSapXep_CBx.add("Giá");
        danhSachSapXep_CBx.add("Số lượng tồn");

        // Thiet lap du lieu cho combo box tim kiem
        danhSachTimKiem_CBx.add("Mã nguyên liệu");
        danhSachTimKiem_CBx.add("Tên nguyên liệu");
        danhSachTimKiem_CBx.add("Giá");
        
        for (String duLieuSapXep: danhSachSapXep_CBx)
        {
            sapXep_CBx.addItem(duLieuSapXep);
        }
        
        for (String duLieuTimKiem: danhSachTimKiem_CBx)
        {
            timKiem_CBx.addItem(duLieuTimKiem);
        }
    } 
    
    public void layDanhSachNguyenLieu()
    {
        Connection connect = Util.getConnection();
        String query = "select * from NguyenLieu";
        try
        {
            PreparedStatement ps = connect.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            while (rs.next())
            {
                NguyenLieu nguyenLieu = new NguyenLieu();
                nguyenLieu.setMaNguyenLieu(rs.getString("maNL"));
                nguyenLieu.setTenNguyenLieu(rs.getString("tenNL"));
                nguyenLieu.setMaDonVi(rs.getString("maDV"));
                nguyenLieu.setDonViTinh(nguyenLieu.layDonViTinh());
                nguyenLieu.setGia(rs.getLong("gia"));
                nguyenLieu.setSoLuong(rs.getInt("soLuong"));
                danhSachNguyenLieu.add(nguyenLieu);
            }
        }catch (SQLException ex)
        {
            System.out.println("Lay danh sach nguyen lieu that bai");
        }
    }
        
    public void hienThiDanhSachNguyenLieu(ArrayList<NguyenLieu> danhSachNguyenLieu, String truongHop)
    {
        dtmNguyenLieu.setRowCount(0);
        if (truongHop.equals("CSDL")) // Load len tu CSDL
        {
            danhSachNguyenLieu.clear();
            layDanhSachNguyenLieu();
            for (NguyenLieu nguyenLieu: danhSachNguyenLieu)
            {
                dtmNguyenLieu.addRow(new Object[]
                {
                    nguyenLieu.getMaNguyenLieu(), nguyenLieu.getTenNguyenLieu(), nguyenLieu.getDonViTinh(),
                    Util.formatCurrency(nguyenLieu.getGia()), Util.formatCurrency(nguyenLieu.getSoLuong())
                });
            }
        }
        else if (truongHop.equals("Khac")) // Ket qua tim kiem, sap xep, sau khi them, xoa, sua,...
        {
            for (NguyenLieu nguyenLieu: danhSachNguyenLieu)
            {
                dtmNguyenLieu.addRow(new Object[]
                {
                    nguyenLieu.getMaNguyenLieu(), nguyenLieu.getTenNguyenLieu(), nguyenLieu.getDonViTinh(),
                    Util.formatCurrency(nguyenLieu.getGia()), Util.formatCurrency(nguyenLieu.getSoLuong())
                });
            }            
        }
    }
       
    public void sapXepNguyenLieu(ArrayList<NguyenLieu> danhSachNguyenLieu, String truongHop, String tangGiam)
    {
        if (truongHop.equals("MaNguyenLieu")) // Sap xep theo ma nguyen lieu
        {
            danhSachNguyenLieu.sort(new Comparator<NguyenLieu>() {
                @Override
                public int compare(NguyenLieu o1, NguyenLieu o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getMaNguyenLieu().compareTo(o2.getMaNguyenLieu());
                    }
                    return o2.getMaNguyenLieu().compareTo(o1.getMaNguyenLieu());
                }
            });
        }
        else if (truongHop.equals("TenNguyenLieu")) // Sap xep theo ten nguyen lieu
        {
            danhSachNguyenLieu.sort(new Comparator<NguyenLieu>() {
                @Override
                public int compare(NguyenLieu o1, NguyenLieu o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getTenNguyenLieu().compareTo(o2.getTenNguyenLieu());
                    }
                    return o2.getTenNguyenLieu().compareTo(o1.getTenNguyenLieu());
                }
            });            
        }
        else if (truongHop.equals("DonViTinh")) // Sap xep theo don vi tinh
        {
            danhSachNguyenLieu.sort(new Comparator<NguyenLieu>() {
                @Override
                public int compare(NguyenLieu o1, NguyenLieu o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getDonViTinh().compareTo(o2.getDonViTinh());
                    }
                    return o2.getDonViTinh().compareTo(o1.getDonViTinh());
                }
            });               
        }
        else if (truongHop.equals("Gia")) // Sap xep theo gia
        {
            danhSachNguyenLieu.sort(new Comparator<NguyenLieu>() {
                @Override
                public int compare(NguyenLieu o1, NguyenLieu o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return (int) (o1.getGia() - o2.getGia());
                    }                    
                    return (int) (o2.getGia() - o1.getGia());
                }
            });               
        }        
        else if (truongHop.equals("SoLuong")) // Sap xep theo so luong
        {
            danhSachNguyenLieu.sort(new Comparator<NguyenLieu>() {
                @Override
                public int compare(NguyenLieu o1, NguyenLieu o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getSoLuong() - o2.getSoLuong();
                    }                         
                    return o2.getSoLuong() - o1.getSoLuong();
                }
            });               
        }
    }    
    
    public void timKiemNguyenLieu()
    {
        String duLieuCanTim = timKiem_TF.getText();
        ArrayList<NguyenLieu> danhSachTam = new ArrayList<>();
        int luaChonTimKiem = timKiem_CBx.getSelectedIndex();
        
        if (duLieuCanTim.equals(""))
        {
            JOptionPane.showMessageDialog(jLayeredPane, "Vui lòng nhập thông tin cần tìm kiếm");
            return;
        }
        if (luaChonTimKiem == 0) // Tim theo ma nguyen lieu
        {
            for (NguyenLieu nguyenLieu: danhSachNguyenLieu)
            {
                if (nguyenLieu.getMaNguyenLieu().trim().toLowerCase().contains(duLieuCanTim.trim().toLowerCase()))
                {
                    danhSachTam.add(nguyenLieu);
                }
            }
            hienThiDanhSachNguyenLieu(danhSachTam, "Khac");
        }
        else if (luaChonTimKiem == 1) // Tim theo ten nguyen lieu
        {
            for (NguyenLieu nguyenLieu: danhSachNguyenLieu)
            {
                if (nguyenLieu.getTenNguyenLieu().trim().toLowerCase().contains(duLieuCanTim.trim().toLowerCase()))
                {
                    danhSachTam.add(nguyenLieu);
                }
            }
            hienThiDanhSachNguyenLieu(danhSachTam, "Khac");
        }
        // Tim kiem theo gia: timKiem_CBxActionPerformed        
    }       
    
    // ================================ PANEL CHI TIET NHAP XUAT ===================================
    public void khoiTaoDuLieuComboBoxChiTietNhap()
    {       
        danhSachTimKiemChiTietNhap_CBx.add("(None)");
        danhSachTimKiemChiTietNhap_CBx.add("Thời gian");
        danhSachTimKiemChiTietNhap_CBx.add("Thành tiền");
        
        danhSachSapXepChiTietNhap_CBx.add("(None)");
        danhSachSapXepChiTietNhap_CBx.add("Mã nhập xuất");
        danhSachSapXepChiTietNhap_CBx.add("Tài khoản");
        danhSachSapXepChiTietNhap_CBx.add("Thời gian");
        danhSachSapXepChiTietNhap_CBx.add("Thành tiền");
        danhSachSapXepChiTietNhap_CBx.add("Trạng thái");

        for (String timKiemChiTietNhap: danhSachTimKiemChiTietNhap_CBx)
        {
            timKiemChiTietNhap_CBx.addItem(timKiemChiTietNhap);
        }
        
        for (String sapXepChiTietNhap: danhSachSapXepChiTietNhap_CBx)
        {
            sapXepChiTietNhap_CBx.addItem(sapXepChiTietNhap);
        }
    }   
    
    public void khoiTaoDuLieuComboBoxChiTietXuat()
    {       
        danhSachTimKiemChiTietXuat_CBx.add("(None)");
        danhSachTimKiemChiTietXuat_CBx.add("Thời gian");
        
        danhSachSapXepChiTietXuat_CBx.add("(None)");
        danhSachSapXepChiTietXuat_CBx.add("Mã nhập xuất");
        danhSachSapXepChiTietXuat_CBx.add("Tài khoản");
        danhSachSapXepChiTietXuat_CBx.add("Thời gian");

        for (String timKiemChiTietXuat: danhSachTimKiemChiTietXuat_CBx)
        {
            timKiemChiTietXuat_CBx.addItem(timKiemChiTietXuat);
        }
        
        for (String sapXepChiTietXuat: danhSachSapXepChiTietXuat_CBx)
        {
            sapXepChiTietXuat_CBx.addItem(sapXepChiTietXuat);
        }
    }     
    
    public void layDanhSachNhap()
    {
        Connection connect = Util.getConnection();
        String query = "select *"
                    +  " from NhapXuat"
                    +  " where LEFT(NhapXuat.maNX, 1) = 'N'";
        try
        {
            PreparedStatement ps = connect.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            while (rs.next())
            {
                if (rs.getString("trangThai").equals("0")) // Nhap nguyen lieu ve kho
                {
                    NhapXuat nhapXuat = new NhapXuat();
                    nhapXuat.setMaNhapXuat(rs.getString("maNX"));
                    nhapXuat.setTaiKhoan(rs.getString("tenTK"));
                    nhapXuat.setThoiGian(rs.getTimestamp("tg"));              
                    nhapXuat.setTrangThai(rs.getString("trangThai"));
                    nhapXuat.setThanhTien(rs.getLong("thanhTien"));
                    nhapXuat.setGhiChu(rs.getString("ghiChu"));

                    HashMap<String, Integer> chiTietNhap = new HashMap<>();
                    String query2 = "select CTNX.*, NL.gia"
                                +   " from ChiTietNhapXuat as CTNX, NguyenLieu as NL"
                                +   " where CTNX.maNL = NL.maNL"
                                +   "   and CTNX.maNX = '" + nhapXuat.getMaNhapXuat() + "'";
                    PreparedStatement ps2 = connect.prepareStatement(query2);
                    ResultSet rs2 = ps2.executeQuery();
                    while (rs2.next())
                    {
                        chiTietNhap.put(rs2.getString("maNL"), rs2.getInt("soLuong"));
                    }
                    nhapXuat.setChiTietNhapXuat(chiTietNhap);
                    danhSachNhap.add(nhapXuat);                    
                }
                else if (rs.getString("trangThai").equals("2")) // Nhap nguyen lieu con thua tu ca ban hang ve kho
                {
                    NhapXuat nhapXuat = new NhapXuat();
                    nhapXuat.setMaNhapXuat(rs.getString("maNX"));
                    nhapXuat.setTaiKhoan(rs.getString("tenTK"));
                    nhapXuat.setThoiGian(rs.getTimestamp("tg"));              
                    nhapXuat.setTrangThai(rs.getString("trangThai"));
                    nhapXuat.setGhiChu(rs.getString("ghiChu"));

                    HashMap<String, Integer> chiTietNhap = new HashMap<>();
                    String query2 = "select CTNX.*"
                                +   " from ChiTietNhapXuat as CTNX, NguyenLieu as NL"
                                +   " where CTNX.maNL = NL.maNL"
                                +   "   and CTNX.maNX = '" + nhapXuat.getMaNhapXuat() + "'";
                    PreparedStatement ps2 = connect.prepareStatement(query2);
                    ResultSet rs2 = ps2.executeQuery();
                    while (rs2.next())
                    {
                        chiTietNhap.put(rs2.getString("maNL"), rs2.getInt("soLuong"));
                    }
                    nhapXuat.setChiTietNhapXuat(chiTietNhap);
                    danhSachNhap.add(nhapXuat);                         
                }
            }
            rs.close();
            ps.close();
            connect.close();
        }catch (SQLException ex)
        {
            System.out.println("Lay danh sach nhap that bai");
        }
    }          
    
    public void layDanhSachXuat()
    {
        Connection connect = Util.getConnection();
        String query = "select *"
                    +  " from NhapXuat"
                    +  " where LEFT(NhapXuat.maNX, 1) = 'X'";
        try
        {
            PreparedStatement ps = connect.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            while (rs.next())
            {
                NhapXuat nhapXuat = new NhapXuat();
                nhapXuat.setMaNhapXuat(rs.getString("maNX"));
                nhapXuat.setTaiKhoan(rs.getString("tenTK"));
                nhapXuat.setThoiGian(rs.getTimestamp("tg"));              
                nhapXuat.setTrangThai(rs.getString("trangThai"));
                nhapXuat.setGhiChu(rs.getString("ghiChu"));
                
                HashMap<String, Integer> chiTietXuat = new HashMap<>();
                String query2 = "select *"
                            +   " from ChiTietNhapXuat as CTNX"
                            +   " where CTNX.maNX = '" + nhapXuat.getMaNhapXuat() + "'";
                PreparedStatement ps2 = connect.prepareStatement(query2);
                ResultSet rs2 = ps2.executeQuery();
                while (rs2.next())
                {
                    chiTietXuat.put(rs2.getString("maNL"), rs2.getInt("soLuong"));
                }
                nhapXuat.setChiTietNhapXuat(chiTietXuat);
                danhSachXuat.add(nhapXuat);
            }
            rs.close();
            ps.close();
            connect.close();
        }catch (SQLException ex)
        {
            System.out.println("Lay danh sach xuat that bai");
        }
    }         
   
    public void hienThiDanhSachNhap(ArrayList<NhapXuat> danhSachNhap, String truongHop)
    {
        dtmChiTietNhap.setRowCount(0);        
        if (truongHop.equals("CSDL")) // Load len tu CSDL
        {
            danhSachNhap.clear();
            layDanhSachNhap();
            for (NhapXuat nhapXuat: danhSachNhap)
            {
                String thoiGian = nhapXuat.getThoiGian().toString();
                dtmChiTietNhap.addRow(new Object[]
                {
                    nhapXuat.getMaNhapXuat(), nhapXuat.getTaiKhoan(), nhapXuat.dinhDangThoiGianNgayThangNam(thoiGian),
                    nhapXuat.getTrangThai(), Util.formatCurrency(nhapXuat.getThanhTien()), nhapXuat.getGhiChu()
                });
            }
        }
        else if (truongHop.equals("Khac")) // Ket qua tim kiem, sap xep
        {
            for (NhapXuat nhapXuat: danhSachNhap)
            {
                String thoiGian = nhapXuat.getThoiGian().toString();
                dtmChiTietNhap.addRow(new Object[]
                {
                    nhapXuat.getMaNhapXuat(), nhapXuat.getTaiKhoan(), nhapXuat.dinhDangThoiGianNgayThangNam(thoiGian),
                    nhapXuat.getTrangThai(), Util.formatCurrency(nhapXuat.getThanhTien()), nhapXuat.getGhiChu()
                });
            }
        }
    }     
       
    public void hienThiDanhSachXuat(ArrayList<NhapXuat> danhSachXuat, String truongHop)
    {
        dtmChiTietXuat.setRowCount(0);
        if (truongHop.equals("CSDL")) // Load len tu CSDL
        {
            danhSachXuat.clear();
            layDanhSachXuat();
            for (NhapXuat nhapXuat: danhSachXuat)
            {
                String thoiGian = nhapXuat.getThoiGian().toString();
                dtmChiTietXuat.addRow(new Object[]
                {
                    nhapXuat.getMaNhapXuat(), nhapXuat.getTaiKhoan(), nhapXuat.dinhDangThoiGianNgayThangNam(thoiGian),
                    nhapXuat.getTrangThai(), nhapXuat.getGhiChu()
                });
            }
        }
        else if (truongHop.equals("Khac")) // Ket qua tim kiem, sap xep
        {
            for (NhapXuat nhapXuat: danhSachXuat)
            {
                String thoiGian = nhapXuat.getThoiGian().toString();
                dtmChiTietXuat.addRow(new Object[]
                {
                    nhapXuat.getMaNhapXuat(), nhapXuat.getTaiKhoan(), nhapXuat.dinhDangThoiGianNgayThangNam(thoiGian),
                    nhapXuat.getTrangThai(), nhapXuat.getGhiChu()
                });
            }
        }
    } 
    
    public void hienThiTongSoTienNhap(ArrayList<NhapXuat> danhSachNhap)
    {
        long tongSoTien = 0;
        for (NhapXuat chiTietNhap: danhSachNhap)
        {
            tongSoTien = tongSoTien + chiTietNhap.getThanhTien();
        }
        tongSoTien_Lbl.setText(Util.formatCurrency(tongSoTien) + " VND");
    }
    
    public void sapXepDanhSachNhapXuat(ArrayList<NhapXuat> danhSachNhapXuat, String truongHop, String tangGiam)
    {      
        if (truongHop.equals("MaNhapXuat")) // Sap xep theo ma nhap xuat
        {
            danhSachNhapXuat.sort(new Comparator<NhapXuat>() {
                @Override
                public int compare(NhapXuat o1, NhapXuat o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getMaNhapXuat().compareTo(o2.getMaNhapXuat());
                    }
                    return o2.getMaNhapXuat().compareTo(o1.getMaNhapXuat());
                }
            });
        }     
        else if (truongHop.equals("TaiKhoan")) // Sap xep theo ten tai khoan
        {
            danhSachNhapXuat.sort(new Comparator<NhapXuat>() {
                @Override
                public int compare(NhapXuat o1, NhapXuat o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getTaiKhoan().compareTo(o2.getTaiKhoan());
                    }
                    return o2.getTaiKhoan().compareTo(o1.getTaiKhoan());
                }
            });
        }  
        else if (truongHop.equals("ThoiGian")) // Sap xep theo thoi gian
        {
            danhSachNhapXuat.sort(new Comparator<NhapXuat>() {
                @Override
                public int compare(NhapXuat o1, NhapXuat o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getThoiGian().toString().compareTo(o2.getThoiGian().toString());
                    }
                    return o2.getThoiGian().toString().compareTo(o1.getThoiGian().toString());
                }
            });
        }      
        else if (truongHop.equals("ThanhTien")) // Sap xep theo thanh tien
        {
            danhSachNhapXuat.sort(new Comparator<NhapXuat>() {
                @Override
                public int compare(NhapXuat o1, NhapXuat o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return (int) (o1.getThanhTien() - o2.getThanhTien());
                    }
                    return (int) (o2.getThanhTien() - o1.getThanhTien());
                }
            });       
        } 
        else if (truongHop.equals("TrangThai")) // Sap xep theo trang thai
        {
            danhSachNhapXuat.sort(new Comparator<NhapXuat>() {
                @Override
                public int compare(NhapXuat o1, NhapXuat o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getTrangThai().compareTo(o2.getTrangThai());
                    }
                    return o2.getTrangThai().compareTo(o1.getTrangThai());
                }
            });       
        }               
    }
}
