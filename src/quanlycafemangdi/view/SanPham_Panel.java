/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlycafemangdi.view;

import java.sql.*;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Set;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import quanlycafemangdi.Util;
import quanlycafemangdi.model.CongThuc;
import quanlycafemangdi.model.NguyenLieu;
import quanlycafemangdi.model.SanPham;

/**
 *
 * @author admin
 */
public class SanPham_Panel extends javax.swing.JPanel implements IOnFrameDispose{

    private JLayeredPane jLayeredPane;
    private JPanel homePanel;    
    
    private ArrayList<SanPham> danhSachSanPham = new ArrayList<>();
    private ArrayList<CongThuc> danhSachCongThuc = new ArrayList<>();
    private ArrayList<NguyenLieu> danhSachNguyenLieu = new ArrayList<>();
    
    private ArrayList<String> danhSachTimKiem_CBx = new ArrayList<>();
    private ArrayList<String> danhSachSapXep_CBx = new ArrayList<>();
    
    
    private DefaultTableModel dtmSanPham;
    private DefaultTableModel dtmNguyenLieuCan;
      
    public SanPham_Panel() {
        initComponents();
    }
    
    public SanPham_Panel(JLayeredPane jLayeredPane, JPanel homePanel)
    {
        initComponents();        
        this.jLayeredPane = jLayeredPane;
        this.homePanel = homePanel;
        dtmNguyenLieuCan = (DefaultTableModel)nguyenLieuCan_Table.getModel();
        
        khoiTaoBang();
        khoiTaoDuLieuCBx();
        
        layDanhSachCongThuc();
        layDanhSachNguyenLieu();
        hienThiDanhSachSanPham(danhSachSanPham, "CSDL");        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        sanPham_Table = new javax.swing.JTable();
        themSanPham_Btn = new javax.swing.JButton();
        xoaSanPham_Btn = new javax.swing.JButton();
        thongTinSanPham_Lbl = new javax.swing.JLabel();
        maSanPham_Lbl = new javax.swing.JLabel();
        tenSanPham_Lbl = new javax.swing.JLabel();
        donViTinh_Lbl = new javax.swing.JLabel();
        gia_Lbl = new javax.swing.JLabel();
        nguyenLieuCan_Lbl = new javax.swing.JLabel();
        cachLam_Lbl = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        cachLam_TA = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        nguyenLieuCan_Table = new javax.swing.JTable();
        maSanPham_TF = new javax.swing.JTextField();
        tenSanPham_TF = new javax.swing.JTextField();
        donViTinh_TF = new javax.swing.JTextField();
        gia_TF = new javax.swing.JTextField();
        luuY_Lbl = new javax.swing.JLabel();
        danhSachSanPham_Lbl = new javax.swing.JLabel();
        timKiem_Lbl = new javax.swing.JLabel();
        timKiem_CBx = new javax.swing.JComboBox<>();
        sapXep_Lbl = new javax.swing.JLabel();
        sapXep_CBx = new javax.swing.JComboBox<>();
        timKiem_TF = new javax.swing.JTextField();
        timKiem_Btn = new javax.swing.JButton();
        giamDan_Btn = new javax.swing.JButton();
        tangDan_Btn = new javax.swing.JButton();
        refresh_Btn = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1000, 600));

        sanPham_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        sanPham_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sanPham_TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(sanPham_Table);

        themSanPham_Btn.setText("Thêm sản phẩm");
        themSanPham_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themSanPham_BtnActionPerformed(evt);
            }
        });

        xoaSanPham_Btn.setText("Xóa sản phẩm");
        xoaSanPham_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaSanPham_BtnActionPerformed(evt);
            }
        });

        thongTinSanPham_Lbl.setText("Thông tin sản phẩm");

        maSanPham_Lbl.setText("Mã sản phẩm:");

        tenSanPham_Lbl.setText("Tên sản phẩm:");

        donViTinh_Lbl.setText("Đơn vị tính:");

        gia_Lbl.setText("Giá:");

        nguyenLieuCan_Lbl.setText("Nguyên liệu cần:");

        cachLam_Lbl.setText("Cách làm:");

        cachLam_TA.setEditable(false);
        cachLam_TA.setColumns(20);
        cachLam_TA.setRows(5);
        jScrollPane2.setViewportView(cachLam_TA);

        nguyenLieuCan_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã nguyên liệu", "Tên nguyên liệu", "Đơn vị tính", "Số lượng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(nguyenLieuCan_Table);

        maSanPham_TF.setEditable(false);

        tenSanPham_TF.setEditable(false);

        donViTinh_TF.setEditable(false);

        gia_TF.setEditable(false);

        luuY_Lbl.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        luuY_Lbl.setText("* Double click để chỉnh sửa dữ liệu");

        danhSachSanPham_Lbl.setText("Danh sách sản phẩm");

        timKiem_Lbl.setText("Tìm kiếm theo");

        timKiem_CBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timKiem_CBxActionPerformed(evt);
            }
        });

        sapXep_Lbl.setText("Sắp xếp theo");

        sapXep_CBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sapXep_CBxActionPerformed(evt);
            }
        });

        timKiem_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/search.png"))); // NOI18N
        timKiem_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timKiem_BtnActionPerformed(evt);
            }
        });

        giamDan_Btn.setText("Giảm dần");
        giamDan_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giamDan_BtnActionPerformed(evt);
            }
        });

        tangDan_Btn.setText("Tăng dần");
        tangDan_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tangDan_BtnActionPerformed(evt);
            }
        });

        refresh_Btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HinhAnh/Refresh.png"))); // NOI18N
        refresh_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh_BtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(sapXep_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sapXep_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(refresh_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tangDan_Btn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(giamDan_Btn)))
                        .addGap(11, 11, 11))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(124, 124, 124)
                                .addComponent(themSanPham_Btn)
                                .addGap(50, 50, 50)
                                .addComponent(xoaSanPham_Btn))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(luuY_Lbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tenSanPham_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tenSanPham_TF))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(maSanPham_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maSanPham_TF))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(donViTinh_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(donViTinh_TF))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(gia_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gia_TF))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cachLam_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nguyenLieuCan_Lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(danhSachSanPham_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(timKiem_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timKiem_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(timKiem_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timKiem_Btn)
                        .addGap(42, 42, 42)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(thongTinSanPham_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(thongTinSanPham_Lbl)
                    .addComponent(danhSachSanPham_Lbl))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(sapXep_Lbl)
                                    .addComponent(sapXep_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tangDan_Btn)
                                    .addComponent(giamDan_Btn)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(timKiem_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(timKiem_Btn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(timKiem_CBx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(timKiem_Lbl))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                                .addComponent(refresh_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(luuY_Lbl)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(xoaSanPham_Btn)
                            .addComponent(themSanPham_Btn))
                        .addGap(63, 63, 63))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(maSanPham_Lbl)
                            .addComponent(maSanPham_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tenSanPham_Lbl)
                            .addComponent(tenSanPham_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(donViTinh_Lbl)
                            .addComponent(donViTinh_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gia_Lbl)
                            .addComponent(gia_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nguyenLieuCan_Lbl)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cachLam_Lbl)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void themSanPham_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themSanPham_BtnActionPerformed
        SanPham_ThemFrame sanPhamThemFrm = new SanPham_ThemFrame();
        sanPhamThemFrm.setOnFrameDispose(this);
        sanPhamThemFrm.setDanhSachSanPham(danhSachSanPham);
        sanPhamThemFrm.setDanhSachCongThuc(danhSachCongThuc);
        sanPhamThemFrm.setDanhSachNguyenLieu(danhSachNguyenLieu);
        sanPhamThemFrm.setVisible(true);
    }//GEN-LAST:event_themSanPham_BtnActionPerformed

    private void sanPham_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sanPham_TableMouseClicked
        int sanPhamDuocChon = sanPham_Table.getSelectedRow();
        hienThiThongTinSanPham();
        
        if (evt.getClickCount() == 2)
        {
            SanPham_SuaFrame sanPhamSuaFrm = new SanPham_SuaFrame();
            CongThuc congThuc = new CongThuc();
            
            for (int i = 0; i < danhSachCongThuc.size(); i++)
            {
                if (danhSachCongThuc.get(i).getMaSP().equals(danhSachSanPham.get(sanPhamDuocChon).getMaSP()))
                {
                    congThuc = danhSachCongThuc.get(i);
                    break;
                }              
            }
            sanPhamSuaFrm.setOnFrameDispose(this);
            sanPhamSuaFrm.thietLapDuLieu(danhSachSanPham.get(sanPhamDuocChon), congThuc);
            sanPhamSuaFrm.setDanhSachNguyenLieu(danhSachNguyenLieu);
            sanPhamSuaFrm.setVisible(true);
        }
    }//GEN-LAST:event_sanPham_TableMouseClicked

    private void xoaSanPham_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaSanPham_BtnActionPerformed
        int sanPhamDuocChon = sanPham_Table.getSelectedRow();
        
        if (sanPhamDuocChon == -1)
        {
            JOptionPane.showMessageDialog(jLayeredPane, "Vui lòng chọn sản phẩm trước");
        }
        else
        {
            String maSanPham = danhSachSanPham.get(sanPhamDuocChon).getMaSP();
            String maCongThuc = "";
            for (int i = 0; i < danhSachCongThuc.size(); i++)
            {
                if (danhSachCongThuc.get(i).getMaSP().equals(maSanPham))
                {
                    maCongThuc = danhSachCongThuc.get(i).getMaCT();
                    break;
                }
            }
            int luaChon = JOptionPane.showConfirmDialog(jLayeredPane, "Xác nhận xóa sản phẩm?", "Xóa sản phẩm khỏi CSDL",
                    JOptionPane.OK_CANCEL_OPTION);
            if (luaChon == JOptionPane.OK_OPTION)
            {
                xoaSanPhamSQL(maCongThuc, maSanPham);
                danhSachSanPham.remove(danhSachSanPham.get(sanPhamDuocChon));
                danhSachCongThuc.remove(maSanPham);
                hienThiDanhSachSanPham(danhSachSanPham, "Khac");
            }
            else
            {
                
            }
        }
    }//GEN-LAST:event_xoaSanPham_BtnActionPerformed

    private void sapXep_CBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sapXep_CBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sapXep_CBxActionPerformed

    private void tangDan_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tangDan_BtnActionPerformed
        if (sapXep_CBx.getSelectedIndex() == 0) // Sap xep theo ma san pham
        {
            sapXepSanPham(danhSachSanPham, "MaSanPham", "Tang");
            hienThiDanhSachSanPham(danhSachSanPham, "Khac");
        }
        else if (sapXep_CBx.getSelectedIndex() == 1) // Sap xep theo ten san pham
        {
            sapXepSanPham(danhSachSanPham, "TenSanPham", "Tang");
            hienThiDanhSachSanPham(danhSachSanPham, "Khac");
        }
        else if (sapXep_CBx.getSelectedIndex() == 2) // Sap xep theo don vi tinh
        {
            sapXepSanPham(danhSachSanPham, "DonViTinh", "Tang");
            hienThiDanhSachSanPham(danhSachSanPham, "Khac");
        } 
        else if (sapXep_CBx.getSelectedIndex() == 3) // // Sap xep theo gia
        {
            sapXepSanPham(danhSachSanPham, "Gia", "Tang");
            hienThiDanhSachSanPham(danhSachSanPham, "Khac");
        } 
    }//GEN-LAST:event_tangDan_BtnActionPerformed

    private void giamDan_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giamDan_BtnActionPerformed
        if (sapXep_CBx.getSelectedIndex() == 0) // Sap xep theo ma san pham
        {
            sapXepSanPham(danhSachSanPham, "MaSanPham", "Giam");
            hienThiDanhSachSanPham(danhSachSanPham, "Khac");
        }
        else if (sapXep_CBx.getSelectedIndex() == 1) // Sap xep theo ten san pham
        {
            sapXepSanPham(danhSachSanPham, "TenSanPham", "Giam");
            hienThiDanhSachSanPham(danhSachSanPham, "Khac");
        }
        else if (sapXep_CBx.getSelectedIndex() == 2) // Sap xep theo don vi tinh
        {
            sapXepSanPham(danhSachSanPham, "DonViTinh", "Giam");
            hienThiDanhSachSanPham(danhSachSanPham, "Khac");
        } 
        else if (sapXep_CBx.getSelectedIndex() == 3) // // Sap xep theo gia
        {
            sapXepSanPham(danhSachSanPham, "Gia", "Giam");
            hienThiDanhSachSanPham(danhSachSanPham, "Khac");
        } 
    }//GEN-LAST:event_giamDan_BtnActionPerformed

    private void timKiem_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timKiem_BtnActionPerformed
        timKiemSanPham();
    }//GEN-LAST:event_timKiem_BtnActionPerformed

    private void refresh_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh_BtnActionPerformed
        hienThiDanhSachSanPham(danhSachSanPham, "CSDL");
        layDanhSachCongThuc();
    }//GEN-LAST:event_refresh_BtnActionPerformed

    private void timKiem_CBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timKiem_CBxActionPerformed
        int luaChonTimKiem = timKiem_CBx.getSelectedIndex();
        ArrayList<SanPham> danhSachTam = new ArrayList<>();
        
        if (luaChonTimKiem == 2)
        {
            JTextField giaTienDau_TF = new JTextField();
            JTextField giaTienCuoi_TF = new JTextField();
            Object inputs[] = {
                "Từ:", giaTienDau_TF,
                "Đến:", giaTienCuoi_TF
            };
            Object options[] = {
                "Tìm kiếm",
                "Hủy"
            };
            int luaChon = JOptionPane.showOptionDialog(null, inputs, "Tìm kiếm sản phẩm theo giá", 
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            if (luaChon == JOptionPane.OK_OPTION)
            {
                String giaTienDau = giaTienDau_TF.getText();
                String giaTienCuoi = giaTienCuoi_TF.getText();
                
                for (SanPham sanPham: danhSachSanPham)
                {
                    if (sanPham.getGia() >= Long.parseLong(giaTienDau)
                            && sanPham.getGia() <= Long.parseLong(giaTienCuoi))
                    {
                        danhSachTam.add(sanPham);
                    }
                }                    
                hienThiDanhSachSanPham(danhSachTam, "Khac");
            }
            else
            {
                
            }
        }
    }//GEN-LAST:event_timKiem_CBxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cachLam_Lbl;
    private javax.swing.JTextArea cachLam_TA;
    private javax.swing.JLabel danhSachSanPham_Lbl;
    private javax.swing.JLabel donViTinh_Lbl;
    private javax.swing.JTextField donViTinh_TF;
    private javax.swing.JLabel gia_Lbl;
    private javax.swing.JTextField gia_TF;
    private javax.swing.JButton giamDan_Btn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel luuY_Lbl;
    private javax.swing.JLabel maSanPham_Lbl;
    private javax.swing.JTextField maSanPham_TF;
    private javax.swing.JLabel nguyenLieuCan_Lbl;
    private javax.swing.JTable nguyenLieuCan_Table;
    private javax.swing.JButton refresh_Btn;
    private javax.swing.JTable sanPham_Table;
    private javax.swing.JComboBox<String> sapXep_CBx;
    private javax.swing.JLabel sapXep_Lbl;
    private javax.swing.JButton tangDan_Btn;
    private javax.swing.JLabel tenSanPham_Lbl;
    private javax.swing.JTextField tenSanPham_TF;
    private javax.swing.JButton themSanPham_Btn;
    private javax.swing.JLabel thongTinSanPham_Lbl;
    private javax.swing.JButton timKiem_Btn;
    private javax.swing.JComboBox<String> timKiem_CBx;
    private javax.swing.JLabel timKiem_Lbl;
    private javax.swing.JTextField timKiem_TF;
    private javax.swing.JButton xoaSanPham_Btn;
    // End of variables declaration//GEN-END:variables
    
    @Override
    public void onFrameDispose() 
    {
        hienThiDanhSachSanPham(danhSachSanPham, "Khac");     
    }    
    
    public void khoiTaoBang()
    {
        dtmSanPham = new DefaultTableModel(){
        @Override
            public boolean isCellEditable(int row, int column) 
            {
                return false;
            }
        };
        dtmSanPham.setColumnIdentifiers(new Object[]
        {
            "Mã sản phẩm", "Tên sản phẩm", "Đơn vị tính", "Giá"
        });
        sanPham_Table.setModel(dtmSanPham);
    }
    
    public void khoiTaoDuLieuCBx()
    {
        danhSachTimKiem_CBx.add("Mã sản phẩm");
        danhSachTimKiem_CBx.add("Tên sản phẩm");
        danhSachTimKiem_CBx.add("Giá");
        
        danhSachSapXep_CBx.add("Mã sản phẩm");
        danhSachSapXep_CBx.add("Tên sản phẩm");
        danhSachSapXep_CBx.add("Đơn vị tính");
        danhSachSapXep_CBx.add("Giá");
        
        for (int i = 0; i < danhSachTimKiem_CBx.size(); i++)
        {
            timKiem_CBx.addItem(danhSachTimKiem_CBx.get(i));
        }
        
        for (int i = 0; i < danhSachSapXep_CBx.size(); i++)
        {
            sapXep_CBx.addItem(danhSachSapXep_CBx.get(i));
        }
    }
    
    public void layDanhSachSanPham()
    {
        Connection connect = Util.getConnection();
        String query = "select * from SanPham";
        try
        {
            PreparedStatement ps = connect.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            while (rs.next())
            {
                SanPham sanPham = new SanPham();
                sanPham.setMaSP(rs.getString("maSP"));
                sanPham.setTenSP(rs.getString("tenSP"));
                sanPham.setMaDonVi(rs.getString("maDV"));
                sanPham.setDonVi(sanPham.layDonViTinh());
                sanPham.setGia(rs.getLong("gia"));
                danhSachSanPham.add(sanPham);
            }
        }catch (SQLException ex)
        {
            System.out.println("Lay danh sach san pham that bai");
        }
    }
    
    public void layDanhSachCongThuc()
    {
        danhSachCongThuc.clear(); // Khi bam xac nhan trong dialog chi tiet cong thuc, bat ke co bam them/sua
                                  //    trong ThemFrame hoac SuaFrame hay khong thi cong thuc moi van duoc luu
                                  //    lai tam thoi. Chuong trinh se luon hien cong thuc tam thoi do, chi khi
                                  //    restart chuong trinh thi moi quay tro ve cong thuc goc. Viec clear
                                  //    danh sach la de lay lai cong thuc goc ma khong can phai restart 
        Connection connect = Util.getConnection();
        String query = "select * from CongThuc, ChiTietCT";
        try
        {
            PreparedStatement ps = connect.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            while (rs.next())
            {
                CongThuc congThuc = new CongThuc();
                congThuc.setMaCT(rs.getString("maCT"));
                congThuc.setMaSP(rs.getString("maSP"));
                congThuc.setCachLam(rs.getString("cachLam"));
                
                HashMap<String, Integer> chiTietCongThuc = new HashMap<>();
                String query2 = "select * from ChiTietCT where maCT = '" + congThuc.getMaCT() + "'";
                PreparedStatement ps2 = connect.prepareStatement(query2);
                ResultSet rs2 = ps2.executeQuery();
                while (rs2.next())
                {
                    chiTietCongThuc.put(rs2.getString("maNL"), rs2.getInt("soLuong"));
                }
                congThuc.setChiTietCT(chiTietCongThuc);
                danhSachCongThuc.add(congThuc);                
            }
        }catch (SQLException ex)
        {
            System.out.println("Lay danh sach cong thuc that bai");
        }
    }    
    
    public void layDanhSachNguyenLieu()
    {
        Connection connect = Util.getConnection();
        String query = "select * from NguyenLieu";
        try
        {
            PreparedStatement ps = connect.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            while (rs.next())
            {
                NguyenLieu nguyenLieu = new NguyenLieu();
                nguyenLieu.setMaNguyenLieu(rs.getString("maNL"));
                nguyenLieu.setTenNguyenLieu(rs.getString("tenNL"));
                nguyenLieu.setMaDonVi(rs.getString("maDV"));
                nguyenLieu.setDonViTinh(nguyenLieu.layDonViTinh());
                nguyenLieu.setGia(rs.getLong("gia"));
                nguyenLieu.setSoLuong(rs.getInt("soLuong"));
                danhSachNguyenLieu.add(nguyenLieu);
            }
        }catch (SQLException ex)
        {
            System.out.println("Lay danh sach nguyen lieu that bai");
        }
    }
    
    public void hienThiDanhSachSanPham(ArrayList<SanPham> danhSachSanPham, String truongHop)
    {
        dtmSanPham.setRowCount(0);
        if (truongHop.equals("CSDL")) // Load len tu CSDL
        {
            danhSachSanPham.clear();
            layDanhSachSanPham();
            for (SanPham sanPham: danhSachSanPham)
            {
                dtmSanPham.addRow(new Object[]
                {
                    sanPham.getMaSP(), sanPham.getTenSP(), sanPham.getDonVi(), Util.formatCurrency(sanPham.getGia())
                });
            }
        }
        else if (truongHop.equals("Khac")) // Ket qua tim kiem, sap xep, sau khi them, xoa, sua,...
        {
            for (SanPham sanPham: danhSachSanPham)
            {
                dtmSanPham.addRow(new Object[]
                {
                    sanPham.getMaSP(), sanPham.getTenSP(), sanPham.getDonVi(), Util.formatCurrency(sanPham.getGia())
                });
            }            
        }        
    }
    
    public void hienThiThongTinSanPham()
    {
        int sanPhamDuocChon = sanPham_Table.getSelectedRow();
        
        dtmNguyenLieuCan.setRowCount(0);
        maSanPham_TF.setText(danhSachSanPham.get(sanPhamDuocChon).getMaSP());
        tenSanPham_TF.setText(danhSachSanPham.get(sanPhamDuocChon).getTenSP());
        donViTinh_TF.setText(danhSachSanPham.get(sanPhamDuocChon).getDonVi());
        gia_TF.setText(Util.formatCurrency(danhSachSanPham.get(sanPhamDuocChon).getGia()) +  "");
        
        for (int i = 0; i < danhSachCongThuc.size(); i++)
        {
            if (danhSachCongThuc.get(i).getMaSP().equals(danhSachSanPham.get(sanPhamDuocChon).getMaSP()))
            {
                Set<String> keySet = danhSachCongThuc.get(i).getChiTietCT().keySet();
                for (String key: keySet)
                {
                    for (int j = 0; j < danhSachNguyenLieu.size(); j++)
                    {
                        if (danhSachNguyenLieu.get(j).getMaNguyenLieu().equals(key))
                        {
                            dtmNguyenLieuCan.addRow(new Object[]
                            {
                                danhSachNguyenLieu.get(j).getMaNguyenLieu(), danhSachNguyenLieu.get(j).getTenNguyenLieu(),
                                danhSachNguyenLieu.get(j).getDonViTinh(), danhSachCongThuc.get(i).getChiTietCT().get(key)
                            });
                        }
                    }
                }
                cachLam_TA.setText(danhSachCongThuc.get(i).getCachLam());
                break;
            }              
        }        
    }
    
    public void xoaSanPhamSQL(String maCongThuc, String maSanPham)
    {
        Connection connect = Util.getConnection();
        String query = "delete from ChiTietCT where maCT = '" + maCongThuc + "'" 
                    +  " delete from CongThuc where maCT = '" + maCongThuc + "'"
                    +  " delete from SanPham where maSP = '" + maSanPham + "'";
        try
        {
            PreparedStatement ps = connect.prepareStatement(query);
            ps.executeUpdate();
            ps.close();
            connect.close();
        }catch (SQLException ex)
        {
            System.out.println("Xoa san pham khoi SQL that bai");
        }
    }
    
    public void sapXepSanPham(ArrayList<SanPham> danhSachSanPham, String truongHop, String tangGiam)
    {
        if (truongHop.equals("MaSanPham")) // Sap xep theo ma san pham
        {
            danhSachSanPham.sort(new Comparator<SanPham>() {
                @Override
                public int compare(SanPham o1, SanPham o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getMaSP().compareTo(o2.getMaSP());
                    }
                    return o2.getMaSP().compareTo(o1.getMaSP());
                }
            });
        }
        else if (truongHop.equals("TenSanPham")) // Sap xep theo ten san pham
        {
            danhSachSanPham.sort(new Comparator<SanPham>() {
                @Override
                public int compare(SanPham o1, SanPham o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getTenSP().compareTo(o2.getTenSP());
                    }
                    return o2.getTenSP().compareTo(o1.getTenSP());
                }
            });           
        }
        else if (truongHop.equals("DonViTinh")) // Sap xep theo don vi tinh
        {
            danhSachSanPham.sort(new Comparator<SanPham>() {
                @Override
                public int compare(SanPham o1, SanPham o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return o1.getDonVi().compareTo(o2.getDonVi());
                    }
                    return o2.getDonVi().compareTo(o1.getDonVi());
                }
            });           
        }
        else if (truongHop.equals("Gia")) // Sap xep theo gia
        {
            danhSachSanPham.sort(new Comparator<SanPham>() {
                @Override
                public int compare(SanPham o1, SanPham o2) 
                {
                    if (tangGiam.equals("Tang"))
                    {
                        return (int) (o1.getGia() - o2.getGia());
                    }
                    return (int) (o2.getGia() - o1.getGia());
                }
            });          
        }        
    }    
    
    public void timKiemSanPham()
    {
        String duLieuCanTim = timKiem_TF.getText();
        ArrayList<SanPham> danhSachTam = new ArrayList<>();
        int luaChonTimKiem = timKiem_CBx.getSelectedIndex();
        
        if (duLieuCanTim.equals(""))
        {
            JOptionPane.showMessageDialog(jLayeredPane, "Vui lòng nhập thông tin cần tìm kiếm");
            return;
        }
        if (luaChonTimKiem == 0) // Tim theo ma san pham
        {
            for (SanPham sanPham: danhSachSanPham)
            {
                if (sanPham.getMaSP().trim().toLowerCase().contains(duLieuCanTim.trim().toLowerCase()))
                {
                    danhSachTam.add(sanPham);
                }
            }
            hienThiDanhSachSanPham(danhSachTam, "Khac");
        }
        else if (luaChonTimKiem == 1) // Tim theo ten san pham
        {
            for (SanPham sanPham: danhSachSanPham)
            {
                if (sanPham.getTenSP().trim().toLowerCase().contains(duLieuCanTim.trim().toLowerCase()))
                {
                    danhSachTam.add(sanPham);
                }
            }
            hienThiDanhSachSanPham(danhSachTam, "Khac");
        }        
    }   
}
